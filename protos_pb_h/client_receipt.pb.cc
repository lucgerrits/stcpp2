// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: client_receipt.proto

#include "client_receipt.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_transaction_5freceipt_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_TransactionReceipt_transaction_5freceipt_2eproto;
class ClientReceiptGetRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ClientReceiptGetRequest> _instance;
} _ClientReceiptGetRequest_default_instance_;
class ClientReceiptGetResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ClientReceiptGetResponse> _instance;
} _ClientReceiptGetResponse_default_instance_;
static void InitDefaultsscc_info_ClientReceiptGetRequest_client_5freceipt_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ClientReceiptGetRequest_default_instance_;
    new (ptr) ::ClientReceiptGetRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ClientReceiptGetRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ClientReceiptGetRequest_client_5freceipt_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_ClientReceiptGetRequest_client_5freceipt_2eproto}, {}};

static void InitDefaultsscc_info_ClientReceiptGetResponse_client_5freceipt_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ClientReceiptGetResponse_default_instance_;
    new (ptr) ::ClientReceiptGetResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ClientReceiptGetResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ClientReceiptGetResponse_client_5freceipt_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_ClientReceiptGetResponse_client_5freceipt_2eproto}, {
      &scc_info_TransactionReceipt_transaction_5freceipt_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_client_5freceipt_2eproto[2];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_client_5freceipt_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_client_5freceipt_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_client_5freceipt_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ClientReceiptGetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientReceiptGetRequest, transaction_ids_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ClientReceiptGetResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientReceiptGetResponse, status_),
  PROTOBUF_FIELD_OFFSET(::ClientReceiptGetResponse, receipts_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::ClientReceiptGetRequest)},
  { 6, -1, sizeof(::ClientReceiptGetResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ClientReceiptGetRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ClientReceiptGetResponse_default_instance_),
};

const char descriptor_table_protodef_client_5freceipt_2eproto[] =
  "\n\024client_receipt.proto\032\031transaction_rece"
  "ipt.proto\"2\n\027ClientReceiptGetRequest\022\027\n\017"
  "transaction_ids\030\001 \003(\t\"\314\001\n\030ClientReceiptG"
  "etResponse\0220\n\006status\030\001 \001(\0162 .ClientRecei"
  "ptGetResponse.Status\022%\n\010receipts\030\002 \003(\0132\023"
  ".TransactionReceipt\"W\n\006Status\022\020\n\014STATUS_"
  "UNSET\020\000\022\006\n\002OK\020\001\022\022\n\016INTERNAL_ERROR\020\002\022\017\n\013N"
  "O_RESOURCE\020\005\022\016\n\nINVALID_ID\020\010B-\n\025sawtooth"
  ".sdk.protobufP\001Z\022client_receipt_pb2b\006pro"
  "to3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_client_5freceipt_2eproto_deps[1] = {
  &::descriptor_table_transaction_5freceipt_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_client_5freceipt_2eproto_sccs[2] = {
  &scc_info_ClientReceiptGetRequest_client_5freceipt_2eproto.base,
  &scc_info_ClientReceiptGetResponse_client_5freceipt_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_client_5freceipt_2eproto_once;
static bool descriptor_table_client_5freceipt_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_client_5freceipt_2eproto = {
  &descriptor_table_client_5freceipt_2eproto_initialized, descriptor_table_protodef_client_5freceipt_2eproto, "client_receipt.proto", 363,
  &descriptor_table_client_5freceipt_2eproto_once, descriptor_table_client_5freceipt_2eproto_sccs, descriptor_table_client_5freceipt_2eproto_deps, 2, 1,
  schemas, file_default_instances, TableStruct_client_5freceipt_2eproto::offsets,
  file_level_metadata_client_5freceipt_2eproto, 2, file_level_enum_descriptors_client_5freceipt_2eproto, file_level_service_descriptors_client_5freceipt_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_client_5freceipt_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_client_5freceipt_2eproto), true);
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ClientReceiptGetResponse_Status_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_client_5freceipt_2eproto);
  return file_level_enum_descriptors_client_5freceipt_2eproto[0];
}
bool ClientReceiptGetResponse_Status_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 5:
    case 8:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr ClientReceiptGetResponse_Status ClientReceiptGetResponse::STATUS_UNSET;
constexpr ClientReceiptGetResponse_Status ClientReceiptGetResponse::OK;
constexpr ClientReceiptGetResponse_Status ClientReceiptGetResponse::INTERNAL_ERROR;
constexpr ClientReceiptGetResponse_Status ClientReceiptGetResponse::NO_RESOURCE;
constexpr ClientReceiptGetResponse_Status ClientReceiptGetResponse::INVALID_ID;
constexpr ClientReceiptGetResponse_Status ClientReceiptGetResponse::Status_MIN;
constexpr ClientReceiptGetResponse_Status ClientReceiptGetResponse::Status_MAX;
constexpr int ClientReceiptGetResponse::Status_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)

// ===================================================================

void ClientReceiptGetRequest::InitAsDefaultInstance() {
}
class ClientReceiptGetRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientReceiptGetRequest::kTransactionIdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientReceiptGetRequest::ClientReceiptGetRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ClientReceiptGetRequest)
}
ClientReceiptGetRequest::ClientReceiptGetRequest(const ClientReceiptGetRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      transaction_ids_(from.transaction_ids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ClientReceiptGetRequest)
}

void ClientReceiptGetRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ClientReceiptGetRequest_client_5freceipt_2eproto.base);
}

ClientReceiptGetRequest::~ClientReceiptGetRequest() {
  // @@protoc_insertion_point(destructor:ClientReceiptGetRequest)
  SharedDtor();
}

void ClientReceiptGetRequest::SharedDtor() {
}

void ClientReceiptGetRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ClientReceiptGetRequest& ClientReceiptGetRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ClientReceiptGetRequest_client_5freceipt_2eproto.base);
  return *internal_default_instance();
}


void ClientReceiptGetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientReceiptGetRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  transaction_ids_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ClientReceiptGetRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated string transaction_ids = 1;
      case 1: {
        if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) != 10) goto handle_unusual;
        while (true) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(add_transaction_ids(), ptr, ctx, "ClientReceiptGetRequest.transaction_ids");
          CHK_(ptr);
          if (!ctx->DataAvailable(ptr)) break;
          if (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) != 10) break;
          ptr += 1;
        }
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        break;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ClientReceiptGetRequest::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:ClientReceiptGetRequest)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string transaction_ids = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->add_transaction_ids()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->transaction_ids(this->transaction_ids_size() - 1).data(),
            static_cast<int>(this->transaction_ids(this->transaction_ids_size() - 1).length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "ClientReceiptGetRequest.transaction_ids"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ClientReceiptGetRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ClientReceiptGetRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ClientReceiptGetRequest::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ClientReceiptGetRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string transaction_ids = 1;
  for (int i = 0, n = this->transaction_ids_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->transaction_ids(i).data(), static_cast<int>(this->transaction_ids(i).length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ClientReceiptGetRequest.transaction_ids");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteString(
      1, this->transaction_ids(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ClientReceiptGetRequest)
}

::PROTOBUF_NAMESPACE_ID::uint8* ClientReceiptGetRequest::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientReceiptGetRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string transaction_ids = 1;
  for (int i = 0, n = this->transaction_ids_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->transaction_ids(i).data(), static_cast<int>(this->transaction_ids(i).length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ClientReceiptGetRequest.transaction_ids");
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      WriteStringToArray(1, this->transaction_ids(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientReceiptGetRequest)
  return target;
}

size_t ClientReceiptGetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientReceiptGetRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string transaction_ids = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->transaction_ids_size());
  for (int i = 0, n = this->transaction_ids_size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      this->transaction_ids(i));
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClientReceiptGetRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientReceiptGetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientReceiptGetRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ClientReceiptGetRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientReceiptGetRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientReceiptGetRequest)
    MergeFrom(*source);
  }
}

void ClientReceiptGetRequest::MergeFrom(const ClientReceiptGetRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientReceiptGetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  transaction_ids_.MergeFrom(from.transaction_ids_);
}

void ClientReceiptGetRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientReceiptGetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientReceiptGetRequest::CopyFrom(const ClientReceiptGetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientReceiptGetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientReceiptGetRequest::IsInitialized() const {
  return true;
}

void ClientReceiptGetRequest::Swap(ClientReceiptGetRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientReceiptGetRequest::InternalSwap(ClientReceiptGetRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  transaction_ids_.InternalSwap(CastToBase(&other->transaction_ids_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ClientReceiptGetRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ClientReceiptGetResponse::InitAsDefaultInstance() {
}
class ClientReceiptGetResponse::HasBitSetters {
 public:
};

void ClientReceiptGetResponse::clear_receipts() {
  receipts_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientReceiptGetResponse::kStatusFieldNumber;
const int ClientReceiptGetResponse::kReceiptsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientReceiptGetResponse::ClientReceiptGetResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ClientReceiptGetResponse)
}
ClientReceiptGetResponse::ClientReceiptGetResponse(const ClientReceiptGetResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      receipts_(from.receipts_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:ClientReceiptGetResponse)
}

void ClientReceiptGetResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ClientReceiptGetResponse_client_5freceipt_2eproto.base);
  status_ = 0;
}

ClientReceiptGetResponse::~ClientReceiptGetResponse() {
  // @@protoc_insertion_point(destructor:ClientReceiptGetResponse)
  SharedDtor();
}

void ClientReceiptGetResponse::SharedDtor() {
}

void ClientReceiptGetResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ClientReceiptGetResponse& ClientReceiptGetResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ClientReceiptGetResponse_client_5freceipt_2eproto.base);
  return *internal_default_instance();
}


void ClientReceiptGetResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientReceiptGetResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  receipts_.Clear();
  status_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ClientReceiptGetResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .ClientReceiptGetResponse.Status status = 1;
      case 1: {
        if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) != 8) goto handle_unusual;
        ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
        CHK_(ptr);
        set_status(static_cast<::ClientReceiptGetResponse_Status>(val));
        break;
      }
      // repeated .TransactionReceipt receipts = 2;
      case 2: {
        if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) != 18) goto handle_unusual;
        while (true) {
          ptr = ctx->ParseMessage(add_receipts(), ptr);
          CHK_(ptr);
          if (!ctx->DataAvailable(ptr)) break;
          if (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) != 18) break;
          ptr += 1;
        }
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        break;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ClientReceiptGetResponse::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:ClientReceiptGetResponse)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ClientReceiptGetResponse.Status status = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_status(static_cast< ::ClientReceiptGetResponse_Status >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .TransactionReceipt receipts = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_receipts()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ClientReceiptGetResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ClientReceiptGetResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ClientReceiptGetResponse::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ClientReceiptGetResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ClientReceiptGetResponse.Status status = 1;
  if (this->status() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      1, this->status(), output);
  }

  // repeated .TransactionReceipt receipts = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->receipts_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->receipts(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ClientReceiptGetResponse)
}

::PROTOBUF_NAMESPACE_ID::uint8* ClientReceiptGetResponse::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientReceiptGetResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ClientReceiptGetResponse.Status status = 1;
  if (this->status() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->status(), target);
  }

  // repeated .TransactionReceipt receipts = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->receipts_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->receipts(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientReceiptGetResponse)
  return target;
}

size_t ClientReceiptGetResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientReceiptGetResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .TransactionReceipt receipts = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->receipts_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->receipts(static_cast<int>(i)));
    }
  }

  // .ClientReceiptGetResponse.Status status = 1;
  if (this->status() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->status());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClientReceiptGetResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientReceiptGetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientReceiptGetResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ClientReceiptGetResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientReceiptGetResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientReceiptGetResponse)
    MergeFrom(*source);
  }
}

void ClientReceiptGetResponse::MergeFrom(const ClientReceiptGetResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientReceiptGetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  receipts_.MergeFrom(from.receipts_);
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void ClientReceiptGetResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientReceiptGetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientReceiptGetResponse::CopyFrom(const ClientReceiptGetResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientReceiptGetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientReceiptGetResponse::IsInitialized() const {
  return true;
}

void ClientReceiptGetResponse::Swap(ClientReceiptGetResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientReceiptGetResponse::InternalSwap(ClientReceiptGetResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&receipts_)->InternalSwap(CastToBase(&other->receipts_));
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ClientReceiptGetResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::ClientReceiptGetRequest* Arena::CreateMaybeMessage< ::ClientReceiptGetRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ClientReceiptGetRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientReceiptGetResponse* Arena::CreateMaybeMessage< ::ClientReceiptGetResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ClientReceiptGetResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
