// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: state_context.proto

#include "state_context.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_events_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Event_events_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_state_5fcontext_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TpStateEntry_state_5fcontext_2eproto;
class TpStateEntryDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TpStateEntry> _instance;
} _TpStateEntry_default_instance_;
class TpStateGetRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TpStateGetRequest> _instance;
} _TpStateGetRequest_default_instance_;
class TpStateGetResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TpStateGetResponse> _instance;
} _TpStateGetResponse_default_instance_;
class TpStateSetRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TpStateSetRequest> _instance;
} _TpStateSetRequest_default_instance_;
class TpStateSetResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TpStateSetResponse> _instance;
} _TpStateSetResponse_default_instance_;
class TpStateDeleteRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TpStateDeleteRequest> _instance;
} _TpStateDeleteRequest_default_instance_;
class TpStateDeleteResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TpStateDeleteResponse> _instance;
} _TpStateDeleteResponse_default_instance_;
class TpReceiptAddDataRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TpReceiptAddDataRequest> _instance;
} _TpReceiptAddDataRequest_default_instance_;
class TpReceiptAddDataResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TpReceiptAddDataResponse> _instance;
} _TpReceiptAddDataResponse_default_instance_;
class TpEventAddRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TpEventAddRequest> _instance;
} _TpEventAddRequest_default_instance_;
class TpEventAddResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TpEventAddResponse> _instance;
} _TpEventAddResponse_default_instance_;
static void InitDefaultsscc_info_TpEventAddRequest_state_5fcontext_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_TpEventAddRequest_default_instance_;
    new (ptr) ::TpEventAddRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TpEventAddRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_TpEventAddRequest_state_5fcontext_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_TpEventAddRequest_state_5fcontext_2eproto}, {
      &scc_info_Event_events_2eproto.base,}};

static void InitDefaultsscc_info_TpEventAddResponse_state_5fcontext_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_TpEventAddResponse_default_instance_;
    new (ptr) ::TpEventAddResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TpEventAddResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TpEventAddResponse_state_5fcontext_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_TpEventAddResponse_state_5fcontext_2eproto}, {}};

static void InitDefaultsscc_info_TpReceiptAddDataRequest_state_5fcontext_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_TpReceiptAddDataRequest_default_instance_;
    new (ptr) ::TpReceiptAddDataRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TpReceiptAddDataRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TpReceiptAddDataRequest_state_5fcontext_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_TpReceiptAddDataRequest_state_5fcontext_2eproto}, {}};

static void InitDefaultsscc_info_TpReceiptAddDataResponse_state_5fcontext_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_TpReceiptAddDataResponse_default_instance_;
    new (ptr) ::TpReceiptAddDataResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TpReceiptAddDataResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TpReceiptAddDataResponse_state_5fcontext_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_TpReceiptAddDataResponse_state_5fcontext_2eproto}, {}};

static void InitDefaultsscc_info_TpStateDeleteRequest_state_5fcontext_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_TpStateDeleteRequest_default_instance_;
    new (ptr) ::TpStateDeleteRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TpStateDeleteRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TpStateDeleteRequest_state_5fcontext_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_TpStateDeleteRequest_state_5fcontext_2eproto}, {}};

static void InitDefaultsscc_info_TpStateDeleteResponse_state_5fcontext_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_TpStateDeleteResponse_default_instance_;
    new (ptr) ::TpStateDeleteResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TpStateDeleteResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TpStateDeleteResponse_state_5fcontext_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_TpStateDeleteResponse_state_5fcontext_2eproto}, {}};

static void InitDefaultsscc_info_TpStateEntry_state_5fcontext_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_TpStateEntry_default_instance_;
    new (ptr) ::TpStateEntry();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TpStateEntry::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TpStateEntry_state_5fcontext_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_TpStateEntry_state_5fcontext_2eproto}, {}};

static void InitDefaultsscc_info_TpStateGetRequest_state_5fcontext_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_TpStateGetRequest_default_instance_;
    new (ptr) ::TpStateGetRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TpStateGetRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TpStateGetRequest_state_5fcontext_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_TpStateGetRequest_state_5fcontext_2eproto}, {}};

static void InitDefaultsscc_info_TpStateGetResponse_state_5fcontext_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_TpStateGetResponse_default_instance_;
    new (ptr) ::TpStateGetResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TpStateGetResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_TpStateGetResponse_state_5fcontext_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_TpStateGetResponse_state_5fcontext_2eproto}, {
      &scc_info_TpStateEntry_state_5fcontext_2eproto.base,}};

static void InitDefaultsscc_info_TpStateSetRequest_state_5fcontext_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_TpStateSetRequest_default_instance_;
    new (ptr) ::TpStateSetRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TpStateSetRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_TpStateSetRequest_state_5fcontext_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_TpStateSetRequest_state_5fcontext_2eproto}, {
      &scc_info_TpStateEntry_state_5fcontext_2eproto.base,}};

static void InitDefaultsscc_info_TpStateSetResponse_state_5fcontext_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_TpStateSetResponse_default_instance_;
    new (ptr) ::TpStateSetResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TpStateSetResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TpStateSetResponse_state_5fcontext_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_TpStateSetResponse_state_5fcontext_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_state_5fcontext_2eproto[11];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_state_5fcontext_2eproto[5];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_state_5fcontext_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_state_5fcontext_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TpStateEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::TpStateEntry, address_),
  PROTOBUF_FIELD_OFFSET(::TpStateEntry, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TpStateGetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::TpStateGetRequest, context_id_),
  PROTOBUF_FIELD_OFFSET(::TpStateGetRequest, addresses_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TpStateGetResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::TpStateGetResponse, entries_),
  PROTOBUF_FIELD_OFFSET(::TpStateGetResponse, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TpStateSetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::TpStateSetRequest, context_id_),
  PROTOBUF_FIELD_OFFSET(::TpStateSetRequest, entries_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TpStateSetResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::TpStateSetResponse, addresses_),
  PROTOBUF_FIELD_OFFSET(::TpStateSetResponse, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TpStateDeleteRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::TpStateDeleteRequest, context_id_),
  PROTOBUF_FIELD_OFFSET(::TpStateDeleteRequest, addresses_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TpStateDeleteResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::TpStateDeleteResponse, addresses_),
  PROTOBUF_FIELD_OFFSET(::TpStateDeleteResponse, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TpReceiptAddDataRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::TpReceiptAddDataRequest, context_id_),
  PROTOBUF_FIELD_OFFSET(::TpReceiptAddDataRequest, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TpReceiptAddDataResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::TpReceiptAddDataResponse, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TpEventAddRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::TpEventAddRequest, context_id_),
  PROTOBUF_FIELD_OFFSET(::TpEventAddRequest, event_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TpEventAddResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::TpEventAddResponse, status_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::TpStateEntry)},
  { 7, -1, sizeof(::TpStateGetRequest)},
  { 14, -1, sizeof(::TpStateGetResponse)},
  { 21, -1, sizeof(::TpStateSetRequest)},
  { 28, -1, sizeof(::TpStateSetResponse)},
  { 35, -1, sizeof(::TpStateDeleteRequest)},
  { 42, -1, sizeof(::TpStateDeleteResponse)},
  { 49, -1, sizeof(::TpReceiptAddDataRequest)},
  { 56, -1, sizeof(::TpReceiptAddDataResponse)},
  { 62, -1, sizeof(::TpEventAddRequest)},
  { 69, -1, sizeof(::TpEventAddResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_TpStateEntry_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_TpStateGetRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_TpStateGetResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_TpStateSetRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_TpStateSetResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_TpStateDeleteRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_TpStateDeleteResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_TpReceiptAddDataRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_TpReceiptAddDataResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_TpEventAddRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_TpEventAddResponse_default_instance_),
};

const char descriptor_table_protodef_state_5fcontext_2eproto[] =
  "\n\023state_context.proto\032\014events.proto\"-\n\014T"
  "pStateEntry\022\017\n\007address\030\001 \001(\t\022\014\n\004data\030\002 \001"
  "(\014\":\n\021TpStateGetRequest\022\022\n\ncontext_id\030\001 "
  "\001(\t\022\021\n\taddresses\030\002 \003(\t\"\235\001\n\022TpStateGetRes"
  "ponse\022\036\n\007entries\030\001 \003(\0132\r.TpStateEntry\022*\n"
  "\006status\030\002 \001(\0162\032.TpStateGetResponse.Statu"
  "s\";\n\006Status\022\020\n\014STATUS_UNSET\020\000\022\006\n\002OK\020\001\022\027\n"
  "\023AUTHORIZATION_ERROR\020\002\"G\n\021TpStateSetRequ"
  "est\022\022\n\ncontext_id\030\001 \001(\t\022\036\n\007entries\030\002 \003(\013"
  "2\r.TpStateEntry\"\220\001\n\022TpStateSetResponse\022\021"
  "\n\taddresses\030\001 \003(\t\022*\n\006status\030\002 \001(\0162\032.TpSt"
  "ateSetResponse.Status\";\n\006Status\022\020\n\014STATU"
  "S_UNSET\020\000\022\006\n\002OK\020\001\022\027\n\023AUTHORIZATION_ERROR"
  "\020\002\"=\n\024TpStateDeleteRequest\022\022\n\ncontext_id"
  "\030\001 \001(\t\022\021\n\taddresses\030\002 \003(\t\"\226\001\n\025TpStateDel"
  "eteResponse\022\021\n\taddresses\030\001 \003(\t\022-\n\006status"
  "\030\002 \001(\0162\035.TpStateDeleteResponse.Status\";\n"
  "\006Status\022\020\n\014STATUS_UNSET\020\000\022\006\n\002OK\020\001\022\027\n\023AUT"
  "HORIZATION_ERROR\020\002\";\n\027TpReceiptAddDataRe"
  "quest\022\022\n\ncontext_id\030\001 \001(\t\022\014\n\004data\030\003 \001(\014\""
  "{\n\030TpReceiptAddDataResponse\0220\n\006status\030\002 "
  "\001(\0162 .TpReceiptAddDataResponse.Status\"-\n"
  "\006Status\022\020\n\014STATUS_UNSET\020\000\022\006\n\002OK\020\001\022\t\n\005ERR"
  "OR\020\002\">\n\021TpEventAddRequest\022\022\n\ncontext_id\030"
  "\001 \001(\t\022\025\n\005event\030\002 \001(\0132\006.Event\"o\n\022TpEventA"
  "ddResponse\022*\n\006status\030\002 \001(\0162\032.TpEventAddR"
  "esponse.Status\"-\n\006Status\022\020\n\014STATUS_UNSET"
  "\020\000\022\006\n\002OK\020\001\022\t\n\005ERROR\020\002B,\n\025sawtooth.sdk.pr"
  "otobufP\001Z\021state_context_pb2b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_state_5fcontext_2eproto_deps[1] = {
  &::descriptor_table_events_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_state_5fcontext_2eproto_sccs[11] = {
  &scc_info_TpEventAddRequest_state_5fcontext_2eproto.base,
  &scc_info_TpEventAddResponse_state_5fcontext_2eproto.base,
  &scc_info_TpReceiptAddDataRequest_state_5fcontext_2eproto.base,
  &scc_info_TpReceiptAddDataResponse_state_5fcontext_2eproto.base,
  &scc_info_TpStateDeleteRequest_state_5fcontext_2eproto.base,
  &scc_info_TpStateDeleteResponse_state_5fcontext_2eproto.base,
  &scc_info_TpStateEntry_state_5fcontext_2eproto.base,
  &scc_info_TpStateGetRequest_state_5fcontext_2eproto.base,
  &scc_info_TpStateGetResponse_state_5fcontext_2eproto.base,
  &scc_info_TpStateSetRequest_state_5fcontext_2eproto.base,
  &scc_info_TpStateSetResponse_state_5fcontext_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_state_5fcontext_2eproto_once;
static bool descriptor_table_state_5fcontext_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_state_5fcontext_2eproto = {
  &descriptor_table_state_5fcontext_2eproto_initialized, descriptor_table_protodef_state_5fcontext_2eproto, "state_context.proto", 1155,
  &descriptor_table_state_5fcontext_2eproto_once, descriptor_table_state_5fcontext_2eproto_sccs, descriptor_table_state_5fcontext_2eproto_deps, 11, 1,
  schemas, file_default_instances, TableStruct_state_5fcontext_2eproto::offsets,
  file_level_metadata_state_5fcontext_2eproto, 11, file_level_enum_descriptors_state_5fcontext_2eproto, file_level_service_descriptors_state_5fcontext_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_state_5fcontext_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_state_5fcontext_2eproto), true);
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* TpStateGetResponse_Status_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_state_5fcontext_2eproto);
  return file_level_enum_descriptors_state_5fcontext_2eproto[0];
}
bool TpStateGetResponse_Status_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr TpStateGetResponse_Status TpStateGetResponse::STATUS_UNSET;
constexpr TpStateGetResponse_Status TpStateGetResponse::OK;
constexpr TpStateGetResponse_Status TpStateGetResponse::AUTHORIZATION_ERROR;
constexpr TpStateGetResponse_Status TpStateGetResponse::Status_MIN;
constexpr TpStateGetResponse_Status TpStateGetResponse::Status_MAX;
constexpr int TpStateGetResponse::Status_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* TpStateSetResponse_Status_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_state_5fcontext_2eproto);
  return file_level_enum_descriptors_state_5fcontext_2eproto[1];
}
bool TpStateSetResponse_Status_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr TpStateSetResponse_Status TpStateSetResponse::STATUS_UNSET;
constexpr TpStateSetResponse_Status TpStateSetResponse::OK;
constexpr TpStateSetResponse_Status TpStateSetResponse::AUTHORIZATION_ERROR;
constexpr TpStateSetResponse_Status TpStateSetResponse::Status_MIN;
constexpr TpStateSetResponse_Status TpStateSetResponse::Status_MAX;
constexpr int TpStateSetResponse::Status_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* TpStateDeleteResponse_Status_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_state_5fcontext_2eproto);
  return file_level_enum_descriptors_state_5fcontext_2eproto[2];
}
bool TpStateDeleteResponse_Status_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr TpStateDeleteResponse_Status TpStateDeleteResponse::STATUS_UNSET;
constexpr TpStateDeleteResponse_Status TpStateDeleteResponse::OK;
constexpr TpStateDeleteResponse_Status TpStateDeleteResponse::AUTHORIZATION_ERROR;
constexpr TpStateDeleteResponse_Status TpStateDeleteResponse::Status_MIN;
constexpr TpStateDeleteResponse_Status TpStateDeleteResponse::Status_MAX;
constexpr int TpStateDeleteResponse::Status_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* TpReceiptAddDataResponse_Status_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_state_5fcontext_2eproto);
  return file_level_enum_descriptors_state_5fcontext_2eproto[3];
}
bool TpReceiptAddDataResponse_Status_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr TpReceiptAddDataResponse_Status TpReceiptAddDataResponse::STATUS_UNSET;
constexpr TpReceiptAddDataResponse_Status TpReceiptAddDataResponse::OK;
constexpr TpReceiptAddDataResponse_Status TpReceiptAddDataResponse::ERROR;
constexpr TpReceiptAddDataResponse_Status TpReceiptAddDataResponse::Status_MIN;
constexpr TpReceiptAddDataResponse_Status TpReceiptAddDataResponse::Status_MAX;
constexpr int TpReceiptAddDataResponse::Status_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* TpEventAddResponse_Status_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_state_5fcontext_2eproto);
  return file_level_enum_descriptors_state_5fcontext_2eproto[4];
}
bool TpEventAddResponse_Status_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr TpEventAddResponse_Status TpEventAddResponse::STATUS_UNSET;
constexpr TpEventAddResponse_Status TpEventAddResponse::OK;
constexpr TpEventAddResponse_Status TpEventAddResponse::ERROR;
constexpr TpEventAddResponse_Status TpEventAddResponse::Status_MIN;
constexpr TpEventAddResponse_Status TpEventAddResponse::Status_MAX;
constexpr int TpEventAddResponse::Status_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)

// ===================================================================

void TpStateEntry::InitAsDefaultInstance() {
}
class TpStateEntry::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TpStateEntry::kAddressFieldNumber;
const int TpStateEntry::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TpStateEntry::TpStateEntry()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:TpStateEntry)
}
TpStateEntry::TpStateEntry(const TpStateEntry& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.address().size() > 0) {
    address_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  // @@protoc_insertion_point(copy_constructor:TpStateEntry)
}

void TpStateEntry::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_TpStateEntry_state_5fcontext_2eproto.base);
  address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

TpStateEntry::~TpStateEntry() {
  // @@protoc_insertion_point(destructor:TpStateEntry)
  SharedDtor();
}

void TpStateEntry::SharedDtor() {
  address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void TpStateEntry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TpStateEntry& TpStateEntry::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TpStateEntry_state_5fcontext_2eproto.base);
  return *internal_default_instance();
}


void TpStateEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:TpStateEntry)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  address_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  data_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TpStateEntry::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string address = 1;
      case 1: {
        if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_address(), ptr, ctx, "TpStateEntry.address");
        CHK_(ptr);
        break;
      }
      // bytes data = 2;
      case 2: {
        if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(mutable_data(), ptr, ctx);
        CHK_(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        break;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TpStateEntry::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:TpStateEntry)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string address = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_address()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->address().data(), static_cast<int>(this->address().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "TpStateEntry.address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes data = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TpStateEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TpStateEntry)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TpStateEntry::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TpStateEntry)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string address = 1;
  if (this->address().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), static_cast<int>(this->address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TpStateEntry.address");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->address(), output);
  }

  // bytes data = 2;
  if (this->data().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:TpStateEntry)
}

::PROTOBUF_NAMESPACE_ID::uint8* TpStateEntry::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:TpStateEntry)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string address = 1;
  if (this->address().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), static_cast<int>(this->address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TpStateEntry.address");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        1, this->address(), target);
  }

  // bytes data = 2;
  if (this->data().size() > 0) {
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBytesToArray(
        2, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TpStateEntry)
  return target;
}

size_t TpStateEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TpStateEntry)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string address = 1;
  if (this->address().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->address());
  }

  // bytes data = 2;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->data());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TpStateEntry::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TpStateEntry)
  GOOGLE_DCHECK_NE(&from, this);
  const TpStateEntry* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TpStateEntry>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TpStateEntry)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TpStateEntry)
    MergeFrom(*source);
  }
}

void TpStateEntry::MergeFrom(const TpStateEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TpStateEntry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.address().size() > 0) {

    address_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
}

void TpStateEntry::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TpStateEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TpStateEntry::CopyFrom(const TpStateEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TpStateEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TpStateEntry::IsInitialized() const {
  return true;
}

void TpStateEntry::Swap(TpStateEntry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TpStateEntry::InternalSwap(TpStateEntry* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  address_.Swap(&other->address_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  data_.Swap(&other->data_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata TpStateEntry::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TpStateGetRequest::InitAsDefaultInstance() {
}
class TpStateGetRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TpStateGetRequest::kContextIdFieldNumber;
const int TpStateGetRequest::kAddressesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TpStateGetRequest::TpStateGetRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:TpStateGetRequest)
}
TpStateGetRequest::TpStateGetRequest(const TpStateGetRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      addresses_(from.addresses_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  context_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.context_id().size() > 0) {
    context_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.context_id_);
  }
  // @@protoc_insertion_point(copy_constructor:TpStateGetRequest)
}

void TpStateGetRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_TpStateGetRequest_state_5fcontext_2eproto.base);
  context_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

TpStateGetRequest::~TpStateGetRequest() {
  // @@protoc_insertion_point(destructor:TpStateGetRequest)
  SharedDtor();
}

void TpStateGetRequest::SharedDtor() {
  context_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void TpStateGetRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TpStateGetRequest& TpStateGetRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TpStateGetRequest_state_5fcontext_2eproto.base);
  return *internal_default_instance();
}


void TpStateGetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:TpStateGetRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  addresses_.Clear();
  context_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TpStateGetRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string context_id = 1;
      case 1: {
        if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_context_id(), ptr, ctx, "TpStateGetRequest.context_id");
        CHK_(ptr);
        break;
      }
      // repeated string addresses = 2;
      case 2: {
        if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) != 18) goto handle_unusual;
        while (true) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(add_addresses(), ptr, ctx, "TpStateGetRequest.addresses");
          CHK_(ptr);
          if (!ctx->DataAvailable(ptr)) break;
          if (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) != 18) break;
          ptr += 1;
        }
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        break;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TpStateGetRequest::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:TpStateGetRequest)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string context_id = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_context_id()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->context_id().data(), static_cast<int>(this->context_id().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "TpStateGetRequest.context_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string addresses = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->add_addresses()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->addresses(this->addresses_size() - 1).data(),
            static_cast<int>(this->addresses(this->addresses_size() - 1).length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "TpStateGetRequest.addresses"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TpStateGetRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TpStateGetRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TpStateGetRequest::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TpStateGetRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string context_id = 1;
  if (this->context_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->context_id().data(), static_cast<int>(this->context_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TpStateGetRequest.context_id");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->context_id(), output);
  }

  // repeated string addresses = 2;
  for (int i = 0, n = this->addresses_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->addresses(i).data(), static_cast<int>(this->addresses(i).length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TpStateGetRequest.addresses");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteString(
      2, this->addresses(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:TpStateGetRequest)
}

::PROTOBUF_NAMESPACE_ID::uint8* TpStateGetRequest::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:TpStateGetRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string context_id = 1;
  if (this->context_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->context_id().data(), static_cast<int>(this->context_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TpStateGetRequest.context_id");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        1, this->context_id(), target);
  }

  // repeated string addresses = 2;
  for (int i = 0, n = this->addresses_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->addresses(i).data(), static_cast<int>(this->addresses(i).length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TpStateGetRequest.addresses");
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      WriteStringToArray(2, this->addresses(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TpStateGetRequest)
  return target;
}

size_t TpStateGetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TpStateGetRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string addresses = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->addresses_size());
  for (int i = 0, n = this->addresses_size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      this->addresses(i));
  }

  // string context_id = 1;
  if (this->context_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->context_id());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TpStateGetRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TpStateGetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const TpStateGetRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TpStateGetRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TpStateGetRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TpStateGetRequest)
    MergeFrom(*source);
  }
}

void TpStateGetRequest::MergeFrom(const TpStateGetRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TpStateGetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  addresses_.MergeFrom(from.addresses_);
  if (from.context_id().size() > 0) {

    context_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.context_id_);
  }
}

void TpStateGetRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TpStateGetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TpStateGetRequest::CopyFrom(const TpStateGetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TpStateGetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TpStateGetRequest::IsInitialized() const {
  return true;
}

void TpStateGetRequest::Swap(TpStateGetRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TpStateGetRequest::InternalSwap(TpStateGetRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  addresses_.InternalSwap(CastToBase(&other->addresses_));
  context_id_.Swap(&other->context_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata TpStateGetRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TpStateGetResponse::InitAsDefaultInstance() {
}
class TpStateGetResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TpStateGetResponse::kEntriesFieldNumber;
const int TpStateGetResponse::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TpStateGetResponse::TpStateGetResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:TpStateGetResponse)
}
TpStateGetResponse::TpStateGetResponse(const TpStateGetResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      entries_(from.entries_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:TpStateGetResponse)
}

void TpStateGetResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_TpStateGetResponse_state_5fcontext_2eproto.base);
  status_ = 0;
}

TpStateGetResponse::~TpStateGetResponse() {
  // @@protoc_insertion_point(destructor:TpStateGetResponse)
  SharedDtor();
}

void TpStateGetResponse::SharedDtor() {
}

void TpStateGetResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TpStateGetResponse& TpStateGetResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TpStateGetResponse_state_5fcontext_2eproto.base);
  return *internal_default_instance();
}


void TpStateGetResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:TpStateGetResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entries_.Clear();
  status_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TpStateGetResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .TpStateEntry entries = 1;
      case 1: {
        if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) != 10) goto handle_unusual;
        while (true) {
          ptr = ctx->ParseMessage(add_entries(), ptr);
          CHK_(ptr);
          if (!ctx->DataAvailable(ptr)) break;
          if (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) != 10) break;
          ptr += 1;
        }
        break;
      }
      // .TpStateGetResponse.Status status = 2;
      case 2: {
        if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) != 16) goto handle_unusual;
        ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
        CHK_(ptr);
        set_status(static_cast<::TpStateGetResponse_Status>(val));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        break;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TpStateGetResponse::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:TpStateGetResponse)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .TpStateEntry entries = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_entries()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .TpStateGetResponse.Status status = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_status(static_cast< ::TpStateGetResponse_Status >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TpStateGetResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TpStateGetResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TpStateGetResponse::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TpStateGetResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .TpStateEntry entries = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entries_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->entries(static_cast<int>(i)),
      output);
  }

  // .TpStateGetResponse.Status status = 2;
  if (this->status() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      2, this->status(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:TpStateGetResponse)
}

::PROTOBUF_NAMESPACE_ID::uint8* TpStateGetResponse::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:TpStateGetResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .TpStateEntry entries = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entries_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->entries(static_cast<int>(i)), target);
  }

  // .TpStateGetResponse.Status status = 2;
  if (this->status() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->status(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TpStateGetResponse)
  return target;
}

size_t TpStateGetResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TpStateGetResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .TpStateEntry entries = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->entries_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->entries(static_cast<int>(i)));
    }
  }

  // .TpStateGetResponse.Status status = 2;
  if (this->status() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->status());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TpStateGetResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TpStateGetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const TpStateGetResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TpStateGetResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TpStateGetResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TpStateGetResponse)
    MergeFrom(*source);
  }
}

void TpStateGetResponse::MergeFrom(const TpStateGetResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TpStateGetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  entries_.MergeFrom(from.entries_);
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void TpStateGetResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TpStateGetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TpStateGetResponse::CopyFrom(const TpStateGetResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TpStateGetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TpStateGetResponse::IsInitialized() const {
  return true;
}

void TpStateGetResponse::Swap(TpStateGetResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TpStateGetResponse::InternalSwap(TpStateGetResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&entries_)->InternalSwap(CastToBase(&other->entries_));
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TpStateGetResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TpStateSetRequest::InitAsDefaultInstance() {
}
class TpStateSetRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TpStateSetRequest::kContextIdFieldNumber;
const int TpStateSetRequest::kEntriesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TpStateSetRequest::TpStateSetRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:TpStateSetRequest)
}
TpStateSetRequest::TpStateSetRequest(const TpStateSetRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      entries_(from.entries_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  context_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.context_id().size() > 0) {
    context_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.context_id_);
  }
  // @@protoc_insertion_point(copy_constructor:TpStateSetRequest)
}

void TpStateSetRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_TpStateSetRequest_state_5fcontext_2eproto.base);
  context_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

TpStateSetRequest::~TpStateSetRequest() {
  // @@protoc_insertion_point(destructor:TpStateSetRequest)
  SharedDtor();
}

void TpStateSetRequest::SharedDtor() {
  context_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void TpStateSetRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TpStateSetRequest& TpStateSetRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TpStateSetRequest_state_5fcontext_2eproto.base);
  return *internal_default_instance();
}


void TpStateSetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:TpStateSetRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entries_.Clear();
  context_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TpStateSetRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string context_id = 1;
      case 1: {
        if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_context_id(), ptr, ctx, "TpStateSetRequest.context_id");
        CHK_(ptr);
        break;
      }
      // repeated .TpStateEntry entries = 2;
      case 2: {
        if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) != 18) goto handle_unusual;
        while (true) {
          ptr = ctx->ParseMessage(add_entries(), ptr);
          CHK_(ptr);
          if (!ctx->DataAvailable(ptr)) break;
          if (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) != 18) break;
          ptr += 1;
        }
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        break;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TpStateSetRequest::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:TpStateSetRequest)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string context_id = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_context_id()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->context_id().data(), static_cast<int>(this->context_id().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "TpStateSetRequest.context_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .TpStateEntry entries = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_entries()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TpStateSetRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TpStateSetRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TpStateSetRequest::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TpStateSetRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string context_id = 1;
  if (this->context_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->context_id().data(), static_cast<int>(this->context_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TpStateSetRequest.context_id");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->context_id(), output);
  }

  // repeated .TpStateEntry entries = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entries_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->entries(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:TpStateSetRequest)
}

::PROTOBUF_NAMESPACE_ID::uint8* TpStateSetRequest::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:TpStateSetRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string context_id = 1;
  if (this->context_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->context_id().data(), static_cast<int>(this->context_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TpStateSetRequest.context_id");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        1, this->context_id(), target);
  }

  // repeated .TpStateEntry entries = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entries_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->entries(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TpStateSetRequest)
  return target;
}

size_t TpStateSetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TpStateSetRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .TpStateEntry entries = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->entries_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->entries(static_cast<int>(i)));
    }
  }

  // string context_id = 1;
  if (this->context_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->context_id());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TpStateSetRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TpStateSetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const TpStateSetRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TpStateSetRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TpStateSetRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TpStateSetRequest)
    MergeFrom(*source);
  }
}

void TpStateSetRequest::MergeFrom(const TpStateSetRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TpStateSetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  entries_.MergeFrom(from.entries_);
  if (from.context_id().size() > 0) {

    context_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.context_id_);
  }
}

void TpStateSetRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TpStateSetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TpStateSetRequest::CopyFrom(const TpStateSetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TpStateSetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TpStateSetRequest::IsInitialized() const {
  return true;
}

void TpStateSetRequest::Swap(TpStateSetRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TpStateSetRequest::InternalSwap(TpStateSetRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&entries_)->InternalSwap(CastToBase(&other->entries_));
  context_id_.Swap(&other->context_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata TpStateSetRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TpStateSetResponse::InitAsDefaultInstance() {
}
class TpStateSetResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TpStateSetResponse::kAddressesFieldNumber;
const int TpStateSetResponse::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TpStateSetResponse::TpStateSetResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:TpStateSetResponse)
}
TpStateSetResponse::TpStateSetResponse(const TpStateSetResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      addresses_(from.addresses_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:TpStateSetResponse)
}

void TpStateSetResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_TpStateSetResponse_state_5fcontext_2eproto.base);
  status_ = 0;
}

TpStateSetResponse::~TpStateSetResponse() {
  // @@protoc_insertion_point(destructor:TpStateSetResponse)
  SharedDtor();
}

void TpStateSetResponse::SharedDtor() {
}

void TpStateSetResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TpStateSetResponse& TpStateSetResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TpStateSetResponse_state_5fcontext_2eproto.base);
  return *internal_default_instance();
}


void TpStateSetResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:TpStateSetResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  addresses_.Clear();
  status_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TpStateSetResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated string addresses = 1;
      case 1: {
        if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) != 10) goto handle_unusual;
        while (true) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(add_addresses(), ptr, ctx, "TpStateSetResponse.addresses");
          CHK_(ptr);
          if (!ctx->DataAvailable(ptr)) break;
          if (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) != 10) break;
          ptr += 1;
        }
        break;
      }
      // .TpStateSetResponse.Status status = 2;
      case 2: {
        if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) != 16) goto handle_unusual;
        ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
        CHK_(ptr);
        set_status(static_cast<::TpStateSetResponse_Status>(val));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        break;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TpStateSetResponse::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:TpStateSetResponse)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string addresses = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->add_addresses()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->addresses(this->addresses_size() - 1).data(),
            static_cast<int>(this->addresses(this->addresses_size() - 1).length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "TpStateSetResponse.addresses"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .TpStateSetResponse.Status status = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_status(static_cast< ::TpStateSetResponse_Status >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TpStateSetResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TpStateSetResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TpStateSetResponse::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TpStateSetResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string addresses = 1;
  for (int i = 0, n = this->addresses_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->addresses(i).data(), static_cast<int>(this->addresses(i).length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TpStateSetResponse.addresses");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteString(
      1, this->addresses(i), output);
  }

  // .TpStateSetResponse.Status status = 2;
  if (this->status() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      2, this->status(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:TpStateSetResponse)
}

::PROTOBUF_NAMESPACE_ID::uint8* TpStateSetResponse::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:TpStateSetResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string addresses = 1;
  for (int i = 0, n = this->addresses_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->addresses(i).data(), static_cast<int>(this->addresses(i).length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TpStateSetResponse.addresses");
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      WriteStringToArray(1, this->addresses(i), target);
  }

  // .TpStateSetResponse.Status status = 2;
  if (this->status() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->status(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TpStateSetResponse)
  return target;
}

size_t TpStateSetResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TpStateSetResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string addresses = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->addresses_size());
  for (int i = 0, n = this->addresses_size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      this->addresses(i));
  }

  // .TpStateSetResponse.Status status = 2;
  if (this->status() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->status());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TpStateSetResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TpStateSetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const TpStateSetResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TpStateSetResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TpStateSetResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TpStateSetResponse)
    MergeFrom(*source);
  }
}

void TpStateSetResponse::MergeFrom(const TpStateSetResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TpStateSetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  addresses_.MergeFrom(from.addresses_);
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void TpStateSetResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TpStateSetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TpStateSetResponse::CopyFrom(const TpStateSetResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TpStateSetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TpStateSetResponse::IsInitialized() const {
  return true;
}

void TpStateSetResponse::Swap(TpStateSetResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TpStateSetResponse::InternalSwap(TpStateSetResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  addresses_.InternalSwap(CastToBase(&other->addresses_));
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TpStateSetResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TpStateDeleteRequest::InitAsDefaultInstance() {
}
class TpStateDeleteRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TpStateDeleteRequest::kContextIdFieldNumber;
const int TpStateDeleteRequest::kAddressesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TpStateDeleteRequest::TpStateDeleteRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:TpStateDeleteRequest)
}
TpStateDeleteRequest::TpStateDeleteRequest(const TpStateDeleteRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      addresses_(from.addresses_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  context_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.context_id().size() > 0) {
    context_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.context_id_);
  }
  // @@protoc_insertion_point(copy_constructor:TpStateDeleteRequest)
}

void TpStateDeleteRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_TpStateDeleteRequest_state_5fcontext_2eproto.base);
  context_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

TpStateDeleteRequest::~TpStateDeleteRequest() {
  // @@protoc_insertion_point(destructor:TpStateDeleteRequest)
  SharedDtor();
}

void TpStateDeleteRequest::SharedDtor() {
  context_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void TpStateDeleteRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TpStateDeleteRequest& TpStateDeleteRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TpStateDeleteRequest_state_5fcontext_2eproto.base);
  return *internal_default_instance();
}


void TpStateDeleteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:TpStateDeleteRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  addresses_.Clear();
  context_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TpStateDeleteRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string context_id = 1;
      case 1: {
        if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_context_id(), ptr, ctx, "TpStateDeleteRequest.context_id");
        CHK_(ptr);
        break;
      }
      // repeated string addresses = 2;
      case 2: {
        if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) != 18) goto handle_unusual;
        while (true) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(add_addresses(), ptr, ctx, "TpStateDeleteRequest.addresses");
          CHK_(ptr);
          if (!ctx->DataAvailable(ptr)) break;
          if (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) != 18) break;
          ptr += 1;
        }
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        break;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TpStateDeleteRequest::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:TpStateDeleteRequest)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string context_id = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_context_id()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->context_id().data(), static_cast<int>(this->context_id().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "TpStateDeleteRequest.context_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string addresses = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->add_addresses()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->addresses(this->addresses_size() - 1).data(),
            static_cast<int>(this->addresses(this->addresses_size() - 1).length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "TpStateDeleteRequest.addresses"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TpStateDeleteRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TpStateDeleteRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TpStateDeleteRequest::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TpStateDeleteRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string context_id = 1;
  if (this->context_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->context_id().data(), static_cast<int>(this->context_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TpStateDeleteRequest.context_id");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->context_id(), output);
  }

  // repeated string addresses = 2;
  for (int i = 0, n = this->addresses_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->addresses(i).data(), static_cast<int>(this->addresses(i).length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TpStateDeleteRequest.addresses");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteString(
      2, this->addresses(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:TpStateDeleteRequest)
}

::PROTOBUF_NAMESPACE_ID::uint8* TpStateDeleteRequest::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:TpStateDeleteRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string context_id = 1;
  if (this->context_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->context_id().data(), static_cast<int>(this->context_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TpStateDeleteRequest.context_id");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        1, this->context_id(), target);
  }

  // repeated string addresses = 2;
  for (int i = 0, n = this->addresses_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->addresses(i).data(), static_cast<int>(this->addresses(i).length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TpStateDeleteRequest.addresses");
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      WriteStringToArray(2, this->addresses(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TpStateDeleteRequest)
  return target;
}

size_t TpStateDeleteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TpStateDeleteRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string addresses = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->addresses_size());
  for (int i = 0, n = this->addresses_size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      this->addresses(i));
  }

  // string context_id = 1;
  if (this->context_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->context_id());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TpStateDeleteRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TpStateDeleteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const TpStateDeleteRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TpStateDeleteRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TpStateDeleteRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TpStateDeleteRequest)
    MergeFrom(*source);
  }
}

void TpStateDeleteRequest::MergeFrom(const TpStateDeleteRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TpStateDeleteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  addresses_.MergeFrom(from.addresses_);
  if (from.context_id().size() > 0) {

    context_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.context_id_);
  }
}

void TpStateDeleteRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TpStateDeleteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TpStateDeleteRequest::CopyFrom(const TpStateDeleteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TpStateDeleteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TpStateDeleteRequest::IsInitialized() const {
  return true;
}

void TpStateDeleteRequest::Swap(TpStateDeleteRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TpStateDeleteRequest::InternalSwap(TpStateDeleteRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  addresses_.InternalSwap(CastToBase(&other->addresses_));
  context_id_.Swap(&other->context_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata TpStateDeleteRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TpStateDeleteResponse::InitAsDefaultInstance() {
}
class TpStateDeleteResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TpStateDeleteResponse::kAddressesFieldNumber;
const int TpStateDeleteResponse::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TpStateDeleteResponse::TpStateDeleteResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:TpStateDeleteResponse)
}
TpStateDeleteResponse::TpStateDeleteResponse(const TpStateDeleteResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      addresses_(from.addresses_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:TpStateDeleteResponse)
}

void TpStateDeleteResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_TpStateDeleteResponse_state_5fcontext_2eproto.base);
  status_ = 0;
}

TpStateDeleteResponse::~TpStateDeleteResponse() {
  // @@protoc_insertion_point(destructor:TpStateDeleteResponse)
  SharedDtor();
}

void TpStateDeleteResponse::SharedDtor() {
}

void TpStateDeleteResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TpStateDeleteResponse& TpStateDeleteResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TpStateDeleteResponse_state_5fcontext_2eproto.base);
  return *internal_default_instance();
}


void TpStateDeleteResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:TpStateDeleteResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  addresses_.Clear();
  status_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TpStateDeleteResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated string addresses = 1;
      case 1: {
        if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) != 10) goto handle_unusual;
        while (true) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(add_addresses(), ptr, ctx, "TpStateDeleteResponse.addresses");
          CHK_(ptr);
          if (!ctx->DataAvailable(ptr)) break;
          if (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) != 10) break;
          ptr += 1;
        }
        break;
      }
      // .TpStateDeleteResponse.Status status = 2;
      case 2: {
        if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) != 16) goto handle_unusual;
        ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
        CHK_(ptr);
        set_status(static_cast<::TpStateDeleteResponse_Status>(val));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        break;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TpStateDeleteResponse::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:TpStateDeleteResponse)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string addresses = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->add_addresses()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->addresses(this->addresses_size() - 1).data(),
            static_cast<int>(this->addresses(this->addresses_size() - 1).length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "TpStateDeleteResponse.addresses"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .TpStateDeleteResponse.Status status = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_status(static_cast< ::TpStateDeleteResponse_Status >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TpStateDeleteResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TpStateDeleteResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TpStateDeleteResponse::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TpStateDeleteResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string addresses = 1;
  for (int i = 0, n = this->addresses_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->addresses(i).data(), static_cast<int>(this->addresses(i).length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TpStateDeleteResponse.addresses");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteString(
      1, this->addresses(i), output);
  }

  // .TpStateDeleteResponse.Status status = 2;
  if (this->status() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      2, this->status(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:TpStateDeleteResponse)
}

::PROTOBUF_NAMESPACE_ID::uint8* TpStateDeleteResponse::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:TpStateDeleteResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string addresses = 1;
  for (int i = 0, n = this->addresses_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->addresses(i).data(), static_cast<int>(this->addresses(i).length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TpStateDeleteResponse.addresses");
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      WriteStringToArray(1, this->addresses(i), target);
  }

  // .TpStateDeleteResponse.Status status = 2;
  if (this->status() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->status(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TpStateDeleteResponse)
  return target;
}

size_t TpStateDeleteResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TpStateDeleteResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string addresses = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->addresses_size());
  for (int i = 0, n = this->addresses_size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      this->addresses(i));
  }

  // .TpStateDeleteResponse.Status status = 2;
  if (this->status() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->status());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TpStateDeleteResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TpStateDeleteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const TpStateDeleteResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TpStateDeleteResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TpStateDeleteResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TpStateDeleteResponse)
    MergeFrom(*source);
  }
}

void TpStateDeleteResponse::MergeFrom(const TpStateDeleteResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TpStateDeleteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  addresses_.MergeFrom(from.addresses_);
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void TpStateDeleteResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TpStateDeleteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TpStateDeleteResponse::CopyFrom(const TpStateDeleteResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TpStateDeleteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TpStateDeleteResponse::IsInitialized() const {
  return true;
}

void TpStateDeleteResponse::Swap(TpStateDeleteResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TpStateDeleteResponse::InternalSwap(TpStateDeleteResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  addresses_.InternalSwap(CastToBase(&other->addresses_));
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TpStateDeleteResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TpReceiptAddDataRequest::InitAsDefaultInstance() {
}
class TpReceiptAddDataRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TpReceiptAddDataRequest::kContextIdFieldNumber;
const int TpReceiptAddDataRequest::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TpReceiptAddDataRequest::TpReceiptAddDataRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:TpReceiptAddDataRequest)
}
TpReceiptAddDataRequest::TpReceiptAddDataRequest(const TpReceiptAddDataRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  context_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.context_id().size() > 0) {
    context_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.context_id_);
  }
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  // @@protoc_insertion_point(copy_constructor:TpReceiptAddDataRequest)
}

void TpReceiptAddDataRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_TpReceiptAddDataRequest_state_5fcontext_2eproto.base);
  context_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

TpReceiptAddDataRequest::~TpReceiptAddDataRequest() {
  // @@protoc_insertion_point(destructor:TpReceiptAddDataRequest)
  SharedDtor();
}

void TpReceiptAddDataRequest::SharedDtor() {
  context_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void TpReceiptAddDataRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TpReceiptAddDataRequest& TpReceiptAddDataRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TpReceiptAddDataRequest_state_5fcontext_2eproto.base);
  return *internal_default_instance();
}


void TpReceiptAddDataRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:TpReceiptAddDataRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  context_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  data_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TpReceiptAddDataRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string context_id = 1;
      case 1: {
        if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_context_id(), ptr, ctx, "TpReceiptAddDataRequest.context_id");
        CHK_(ptr);
        break;
      }
      // bytes data = 3;
      case 3: {
        if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(mutable_data(), ptr, ctx);
        CHK_(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        break;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TpReceiptAddDataRequest::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:TpReceiptAddDataRequest)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string context_id = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_context_id()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->context_id().data(), static_cast<int>(this->context_id().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "TpReceiptAddDataRequest.context_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes data = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TpReceiptAddDataRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TpReceiptAddDataRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TpReceiptAddDataRequest::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TpReceiptAddDataRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string context_id = 1;
  if (this->context_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->context_id().data(), static_cast<int>(this->context_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TpReceiptAddDataRequest.context_id");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->context_id(), output);
  }

  // bytes data = 3;
  if (this->data().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:TpReceiptAddDataRequest)
}

::PROTOBUF_NAMESPACE_ID::uint8* TpReceiptAddDataRequest::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:TpReceiptAddDataRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string context_id = 1;
  if (this->context_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->context_id().data(), static_cast<int>(this->context_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TpReceiptAddDataRequest.context_id");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        1, this->context_id(), target);
  }

  // bytes data = 3;
  if (this->data().size() > 0) {
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBytesToArray(
        3, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TpReceiptAddDataRequest)
  return target;
}

size_t TpReceiptAddDataRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TpReceiptAddDataRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string context_id = 1;
  if (this->context_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->context_id());
  }

  // bytes data = 3;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->data());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TpReceiptAddDataRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TpReceiptAddDataRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const TpReceiptAddDataRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TpReceiptAddDataRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TpReceiptAddDataRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TpReceiptAddDataRequest)
    MergeFrom(*source);
  }
}

void TpReceiptAddDataRequest::MergeFrom(const TpReceiptAddDataRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TpReceiptAddDataRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.context_id().size() > 0) {

    context_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.context_id_);
  }
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
}

void TpReceiptAddDataRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TpReceiptAddDataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TpReceiptAddDataRequest::CopyFrom(const TpReceiptAddDataRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TpReceiptAddDataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TpReceiptAddDataRequest::IsInitialized() const {
  return true;
}

void TpReceiptAddDataRequest::Swap(TpReceiptAddDataRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TpReceiptAddDataRequest::InternalSwap(TpReceiptAddDataRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  context_id_.Swap(&other->context_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  data_.Swap(&other->data_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata TpReceiptAddDataRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TpReceiptAddDataResponse::InitAsDefaultInstance() {
}
class TpReceiptAddDataResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TpReceiptAddDataResponse::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TpReceiptAddDataResponse::TpReceiptAddDataResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:TpReceiptAddDataResponse)
}
TpReceiptAddDataResponse::TpReceiptAddDataResponse(const TpReceiptAddDataResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:TpReceiptAddDataResponse)
}

void TpReceiptAddDataResponse::SharedCtor() {
  status_ = 0;
}

TpReceiptAddDataResponse::~TpReceiptAddDataResponse() {
  // @@protoc_insertion_point(destructor:TpReceiptAddDataResponse)
  SharedDtor();
}

void TpReceiptAddDataResponse::SharedDtor() {
}

void TpReceiptAddDataResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TpReceiptAddDataResponse& TpReceiptAddDataResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TpReceiptAddDataResponse_state_5fcontext_2eproto.base);
  return *internal_default_instance();
}


void TpReceiptAddDataResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:TpReceiptAddDataResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TpReceiptAddDataResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .TpReceiptAddDataResponse.Status status = 2;
      case 2: {
        if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) != 16) goto handle_unusual;
        ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
        CHK_(ptr);
        set_status(static_cast<::TpReceiptAddDataResponse_Status>(val));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        break;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TpReceiptAddDataResponse::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:TpReceiptAddDataResponse)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .TpReceiptAddDataResponse.Status status = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_status(static_cast< ::TpReceiptAddDataResponse_Status >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TpReceiptAddDataResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TpReceiptAddDataResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TpReceiptAddDataResponse::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TpReceiptAddDataResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .TpReceiptAddDataResponse.Status status = 2;
  if (this->status() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      2, this->status(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:TpReceiptAddDataResponse)
}

::PROTOBUF_NAMESPACE_ID::uint8* TpReceiptAddDataResponse::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:TpReceiptAddDataResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .TpReceiptAddDataResponse.Status status = 2;
  if (this->status() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->status(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TpReceiptAddDataResponse)
  return target;
}

size_t TpReceiptAddDataResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TpReceiptAddDataResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .TpReceiptAddDataResponse.Status status = 2;
  if (this->status() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->status());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TpReceiptAddDataResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TpReceiptAddDataResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const TpReceiptAddDataResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TpReceiptAddDataResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TpReceiptAddDataResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TpReceiptAddDataResponse)
    MergeFrom(*source);
  }
}

void TpReceiptAddDataResponse::MergeFrom(const TpReceiptAddDataResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TpReceiptAddDataResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.status() != 0) {
    set_status(from.status());
  }
}

void TpReceiptAddDataResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TpReceiptAddDataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TpReceiptAddDataResponse::CopyFrom(const TpReceiptAddDataResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TpReceiptAddDataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TpReceiptAddDataResponse::IsInitialized() const {
  return true;
}

void TpReceiptAddDataResponse::Swap(TpReceiptAddDataResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TpReceiptAddDataResponse::InternalSwap(TpReceiptAddDataResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TpReceiptAddDataResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TpEventAddRequest::InitAsDefaultInstance() {
  ::_TpEventAddRequest_default_instance_._instance.get_mutable()->event_ = const_cast< ::Event*>(
      ::Event::internal_default_instance());
}
class TpEventAddRequest::HasBitSetters {
 public:
  static const ::Event& event(const TpEventAddRequest* msg);
};

const ::Event&
TpEventAddRequest::HasBitSetters::event(const TpEventAddRequest* msg) {
  return *msg->event_;
}
void TpEventAddRequest::clear_event() {
  if (GetArenaNoVirtual() == nullptr && event_ != nullptr) {
    delete event_;
  }
  event_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TpEventAddRequest::kContextIdFieldNumber;
const int TpEventAddRequest::kEventFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TpEventAddRequest::TpEventAddRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:TpEventAddRequest)
}
TpEventAddRequest::TpEventAddRequest(const TpEventAddRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  context_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.context_id().size() > 0) {
    context_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.context_id_);
  }
  if (from.has_event()) {
    event_ = new ::Event(*from.event_);
  } else {
    event_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:TpEventAddRequest)
}

void TpEventAddRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_TpEventAddRequest_state_5fcontext_2eproto.base);
  context_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  event_ = nullptr;
}

TpEventAddRequest::~TpEventAddRequest() {
  // @@protoc_insertion_point(destructor:TpEventAddRequest)
  SharedDtor();
}

void TpEventAddRequest::SharedDtor() {
  context_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete event_;
}

void TpEventAddRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TpEventAddRequest& TpEventAddRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TpEventAddRequest_state_5fcontext_2eproto.base);
  return *internal_default_instance();
}


void TpEventAddRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:TpEventAddRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  context_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && event_ != nullptr) {
    delete event_;
  }
  event_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TpEventAddRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string context_id = 1;
      case 1: {
        if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_context_id(), ptr, ctx, "TpEventAddRequest.context_id");
        CHK_(ptr);
        break;
      }
      // .Event event = 2;
      case 2: {
        if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) != 18) goto handle_unusual;
        ptr = ctx->ParseMessage(mutable_event(), ptr);
        CHK_(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        break;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TpEventAddRequest::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:TpEventAddRequest)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string context_id = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_context_id()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->context_id().data(), static_cast<int>(this->context_id().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "TpEventAddRequest.context_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Event event = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_event()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TpEventAddRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TpEventAddRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TpEventAddRequest::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TpEventAddRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string context_id = 1;
  if (this->context_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->context_id().data(), static_cast<int>(this->context_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TpEventAddRequest.context_id");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->context_id(), output);
  }

  // .Event event = 2;
  if (this->has_event()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::event(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:TpEventAddRequest)
}

::PROTOBUF_NAMESPACE_ID::uint8* TpEventAddRequest::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:TpEventAddRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string context_id = 1;
  if (this->context_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->context_id().data(), static_cast<int>(this->context_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TpEventAddRequest.context_id");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        1, this->context_id(), target);
  }

  // .Event event = 2;
  if (this->has_event()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::event(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TpEventAddRequest)
  return target;
}

size_t TpEventAddRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TpEventAddRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string context_id = 1;
  if (this->context_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->context_id());
  }

  // .Event event = 2;
  if (this->has_event()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *event_);
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TpEventAddRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TpEventAddRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const TpEventAddRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TpEventAddRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TpEventAddRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TpEventAddRequest)
    MergeFrom(*source);
  }
}

void TpEventAddRequest::MergeFrom(const TpEventAddRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TpEventAddRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.context_id().size() > 0) {

    context_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.context_id_);
  }
  if (from.has_event()) {
    mutable_event()->::Event::MergeFrom(from.event());
  }
}

void TpEventAddRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TpEventAddRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TpEventAddRequest::CopyFrom(const TpEventAddRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TpEventAddRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TpEventAddRequest::IsInitialized() const {
  return true;
}

void TpEventAddRequest::Swap(TpEventAddRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TpEventAddRequest::InternalSwap(TpEventAddRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  context_id_.Swap(&other->context_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(event_, other->event_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TpEventAddRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TpEventAddResponse::InitAsDefaultInstance() {
}
class TpEventAddResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TpEventAddResponse::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TpEventAddResponse::TpEventAddResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:TpEventAddResponse)
}
TpEventAddResponse::TpEventAddResponse(const TpEventAddResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:TpEventAddResponse)
}

void TpEventAddResponse::SharedCtor() {
  status_ = 0;
}

TpEventAddResponse::~TpEventAddResponse() {
  // @@protoc_insertion_point(destructor:TpEventAddResponse)
  SharedDtor();
}

void TpEventAddResponse::SharedDtor() {
}

void TpEventAddResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TpEventAddResponse& TpEventAddResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TpEventAddResponse_state_5fcontext_2eproto.base);
  return *internal_default_instance();
}


void TpEventAddResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:TpEventAddResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TpEventAddResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .TpEventAddResponse.Status status = 2;
      case 2: {
        if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) != 16) goto handle_unusual;
        ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
        CHK_(ptr);
        set_status(static_cast<::TpEventAddResponse_Status>(val));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        break;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TpEventAddResponse::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:TpEventAddResponse)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .TpEventAddResponse.Status status = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_status(static_cast< ::TpEventAddResponse_Status >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TpEventAddResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TpEventAddResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TpEventAddResponse::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TpEventAddResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .TpEventAddResponse.Status status = 2;
  if (this->status() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      2, this->status(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:TpEventAddResponse)
}

::PROTOBUF_NAMESPACE_ID::uint8* TpEventAddResponse::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:TpEventAddResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .TpEventAddResponse.Status status = 2;
  if (this->status() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->status(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TpEventAddResponse)
  return target;
}

size_t TpEventAddResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TpEventAddResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .TpEventAddResponse.Status status = 2;
  if (this->status() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->status());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TpEventAddResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TpEventAddResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const TpEventAddResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TpEventAddResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TpEventAddResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TpEventAddResponse)
    MergeFrom(*source);
  }
}

void TpEventAddResponse::MergeFrom(const TpEventAddResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TpEventAddResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.status() != 0) {
    set_status(from.status());
  }
}

void TpEventAddResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TpEventAddResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TpEventAddResponse::CopyFrom(const TpEventAddResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TpEventAddResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TpEventAddResponse::IsInitialized() const {
  return true;
}

void TpEventAddResponse::Swap(TpEventAddResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TpEventAddResponse::InternalSwap(TpEventAddResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TpEventAddResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::TpStateEntry* Arena::CreateMaybeMessage< ::TpStateEntry >(Arena* arena) {
  return Arena::CreateInternal< ::TpStateEntry >(arena);
}
template<> PROTOBUF_NOINLINE ::TpStateGetRequest* Arena::CreateMaybeMessage< ::TpStateGetRequest >(Arena* arena) {
  return Arena::CreateInternal< ::TpStateGetRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::TpStateGetResponse* Arena::CreateMaybeMessage< ::TpStateGetResponse >(Arena* arena) {
  return Arena::CreateInternal< ::TpStateGetResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::TpStateSetRequest* Arena::CreateMaybeMessage< ::TpStateSetRequest >(Arena* arena) {
  return Arena::CreateInternal< ::TpStateSetRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::TpStateSetResponse* Arena::CreateMaybeMessage< ::TpStateSetResponse >(Arena* arena) {
  return Arena::CreateInternal< ::TpStateSetResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::TpStateDeleteRequest* Arena::CreateMaybeMessage< ::TpStateDeleteRequest >(Arena* arena) {
  return Arena::CreateInternal< ::TpStateDeleteRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::TpStateDeleteResponse* Arena::CreateMaybeMessage< ::TpStateDeleteResponse >(Arena* arena) {
  return Arena::CreateInternal< ::TpStateDeleteResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::TpReceiptAddDataRequest* Arena::CreateMaybeMessage< ::TpReceiptAddDataRequest >(Arena* arena) {
  return Arena::CreateInternal< ::TpReceiptAddDataRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::TpReceiptAddDataResponse* Arena::CreateMaybeMessage< ::TpReceiptAddDataResponse >(Arena* arena) {
  return Arena::CreateInternal< ::TpReceiptAddDataResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::TpEventAddRequest* Arena::CreateMaybeMessage< ::TpEventAddRequest >(Arena* arena) {
  return Arena::CreateInternal< ::TpEventAddRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::TpEventAddResponse* Arena::CreateMaybeMessage< ::TpEventAddResponse >(Arena* arena) {
  return Arena::CreateInternal< ::TpEventAddResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
