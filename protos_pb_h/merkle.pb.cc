// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: merkle.proto

#include "merkle.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_merkle_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ChangeLogEntry_Successor_merkle_2eproto;
class ChangeLogEntry_SuccessorDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ChangeLogEntry_Successor> _instance;
} _ChangeLogEntry_Successor_default_instance_;
class ChangeLogEntryDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ChangeLogEntry> _instance;
} _ChangeLogEntry_default_instance_;
static void InitDefaultsscc_info_ChangeLogEntry_merkle_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ChangeLogEntry_default_instance_;
    new (ptr) ::ChangeLogEntry();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ChangeLogEntry::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ChangeLogEntry_merkle_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_ChangeLogEntry_merkle_2eproto}, {
      &scc_info_ChangeLogEntry_Successor_merkle_2eproto.base,}};

static void InitDefaultsscc_info_ChangeLogEntry_Successor_merkle_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ChangeLogEntry_Successor_default_instance_;
    new (ptr) ::ChangeLogEntry_Successor();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ChangeLogEntry_Successor::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ChangeLogEntry_Successor_merkle_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_ChangeLogEntry_Successor_merkle_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_merkle_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_merkle_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_merkle_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_merkle_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ChangeLogEntry_Successor, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ChangeLogEntry_Successor, successor_),
  PROTOBUF_FIELD_OFFSET(::ChangeLogEntry_Successor, deletions_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ChangeLogEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ChangeLogEntry, parent_),
  PROTOBUF_FIELD_OFFSET(::ChangeLogEntry, additions_),
  PROTOBUF_FIELD_OFFSET(::ChangeLogEntry, successors_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::ChangeLogEntry_Successor)},
  { 7, -1, sizeof(::ChangeLogEntry)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ChangeLogEntry_Successor_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ChangeLogEntry_default_instance_),
};

const char descriptor_table_protodef_merkle_2eproto[] =
  "\n\014merkle.proto\"\225\001\n\016ChangeLogEntry\022\016\n\006par"
  "ent\030\001 \001(\014\022\021\n\tadditions\030\002 \003(\014\022-\n\nsuccesso"
  "rs\030\003 \003(\0132\031.ChangeLogEntry.Successor\0321\n\tS"
  "uccessor\022\021\n\tsuccessor\030\001 \001(\014\022\021\n\tdeletions"
  "\030\002 \003(\014B%\n\025sawtooth.sdk.protobufP\001Z\nmerkl"
  "e_pb2b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_merkle_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_merkle_2eproto_sccs[2] = {
  &scc_info_ChangeLogEntry_merkle_2eproto.base,
  &scc_info_ChangeLogEntry_Successor_merkle_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_merkle_2eproto_once;
static bool descriptor_table_merkle_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_merkle_2eproto = {
  &descriptor_table_merkle_2eproto_initialized, descriptor_table_protodef_merkle_2eproto, "merkle.proto", 213,
  &descriptor_table_merkle_2eproto_once, descriptor_table_merkle_2eproto_sccs, descriptor_table_merkle_2eproto_deps, 2, 0,
  schemas, file_default_instances, TableStruct_merkle_2eproto::offsets,
  file_level_metadata_merkle_2eproto, 2, file_level_enum_descriptors_merkle_2eproto, file_level_service_descriptors_merkle_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_merkle_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_merkle_2eproto), true);

// ===================================================================

void ChangeLogEntry_Successor::InitAsDefaultInstance() {
}
class ChangeLogEntry_Successor::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChangeLogEntry_Successor::kSuccessorFieldNumber;
const int ChangeLogEntry_Successor::kDeletionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChangeLogEntry_Successor::ChangeLogEntry_Successor()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ChangeLogEntry.Successor)
}
ChangeLogEntry_Successor::ChangeLogEntry_Successor(const ChangeLogEntry_Successor& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      deletions_(from.deletions_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  successor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.successor().size() > 0) {
    successor_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.successor_);
  }
  // @@protoc_insertion_point(copy_constructor:ChangeLogEntry.Successor)
}

void ChangeLogEntry_Successor::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ChangeLogEntry_Successor_merkle_2eproto.base);
  successor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ChangeLogEntry_Successor::~ChangeLogEntry_Successor() {
  // @@protoc_insertion_point(destructor:ChangeLogEntry.Successor)
  SharedDtor();
}

void ChangeLogEntry_Successor::SharedDtor() {
  successor_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ChangeLogEntry_Successor::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ChangeLogEntry_Successor& ChangeLogEntry_Successor::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ChangeLogEntry_Successor_merkle_2eproto.base);
  return *internal_default_instance();
}


void ChangeLogEntry_Successor::Clear() {
// @@protoc_insertion_point(message_clear_start:ChangeLogEntry.Successor)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  deletions_.Clear();
  successor_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ChangeLogEntry_Successor::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes successor = 1;
      case 1: {
        if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(mutable_successor(), ptr, ctx);
        CHK_(ptr);
        break;
      }
      // repeated bytes deletions = 2;
      case 2: {
        if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) != 18) goto handle_unusual;
        while (true) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(add_deletions(), ptr, ctx);
          CHK_(ptr);
          if (!ctx->DataAvailable(ptr)) break;
          if (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) != 18) break;
          ptr += 1;
        }
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        break;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ChangeLogEntry_Successor::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:ChangeLogEntry.Successor)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes successor = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadBytes(
                input, this->mutable_successor()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes deletions = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadBytes(
                input, this->add_deletions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ChangeLogEntry.Successor)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ChangeLogEntry.Successor)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ChangeLogEntry_Successor::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ChangeLogEntry.Successor)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes successor = 1;
  if (this->successor().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->successor(), output);
  }

  // repeated bytes deletions = 2;
  for (int i = 0, n = this->deletions_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBytes(
      2, this->deletions(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ChangeLogEntry.Successor)
}

::PROTOBUF_NAMESPACE_ID::uint8* ChangeLogEntry_Successor::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ChangeLogEntry.Successor)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes successor = 1;
  if (this->successor().size() > 0) {
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBytesToArray(
        1, this->successor(), target);
  }

  // repeated bytes deletions = 2;
  for (int i = 0, n = this->deletions_size(); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      WriteBytesToArray(2, this->deletions(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ChangeLogEntry.Successor)
  return target;
}

size_t ChangeLogEntry_Successor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ChangeLogEntry.Successor)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated bytes deletions = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->deletions_size());
  for (int i = 0, n = this->deletions_size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
      this->deletions(i));
  }

  // bytes successor = 1;
  if (this->successor().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->successor());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ChangeLogEntry_Successor::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ChangeLogEntry.Successor)
  GOOGLE_DCHECK_NE(&from, this);
  const ChangeLogEntry_Successor* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ChangeLogEntry_Successor>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ChangeLogEntry.Successor)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ChangeLogEntry.Successor)
    MergeFrom(*source);
  }
}

void ChangeLogEntry_Successor::MergeFrom(const ChangeLogEntry_Successor& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ChangeLogEntry.Successor)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  deletions_.MergeFrom(from.deletions_);
  if (from.successor().size() > 0) {

    successor_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.successor_);
  }
}

void ChangeLogEntry_Successor::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ChangeLogEntry.Successor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChangeLogEntry_Successor::CopyFrom(const ChangeLogEntry_Successor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ChangeLogEntry.Successor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChangeLogEntry_Successor::IsInitialized() const {
  return true;
}

void ChangeLogEntry_Successor::Swap(ChangeLogEntry_Successor* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChangeLogEntry_Successor::InternalSwap(ChangeLogEntry_Successor* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  deletions_.InternalSwap(CastToBase(&other->deletions_));
  successor_.Swap(&other->successor_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata ChangeLogEntry_Successor::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ChangeLogEntry::InitAsDefaultInstance() {
}
class ChangeLogEntry::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChangeLogEntry::kParentFieldNumber;
const int ChangeLogEntry::kAdditionsFieldNumber;
const int ChangeLogEntry::kSuccessorsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChangeLogEntry::ChangeLogEntry()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ChangeLogEntry)
}
ChangeLogEntry::ChangeLogEntry(const ChangeLogEntry& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      additions_(from.additions_),
      successors_(from.successors_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.parent().size() > 0) {
    parent_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  // @@protoc_insertion_point(copy_constructor:ChangeLogEntry)
}

void ChangeLogEntry::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ChangeLogEntry_merkle_2eproto.base);
  parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ChangeLogEntry::~ChangeLogEntry() {
  // @@protoc_insertion_point(destructor:ChangeLogEntry)
  SharedDtor();
}

void ChangeLogEntry::SharedDtor() {
  parent_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ChangeLogEntry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ChangeLogEntry& ChangeLogEntry::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ChangeLogEntry_merkle_2eproto.base);
  return *internal_default_instance();
}


void ChangeLogEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:ChangeLogEntry)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  additions_.Clear();
  successors_.Clear();
  parent_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ChangeLogEntry::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes parent = 1;
      case 1: {
        if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(mutable_parent(), ptr, ctx);
        CHK_(ptr);
        break;
      }
      // repeated bytes additions = 2;
      case 2: {
        if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) != 18) goto handle_unusual;
        while (true) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(add_additions(), ptr, ctx);
          CHK_(ptr);
          if (!ctx->DataAvailable(ptr)) break;
          if (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) != 18) break;
          ptr += 1;
        }
        break;
      }
      // repeated .ChangeLogEntry.Successor successors = 3;
      case 3: {
        if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) != 26) goto handle_unusual;
        while (true) {
          ptr = ctx->ParseMessage(add_successors(), ptr);
          CHK_(ptr);
          if (!ctx->DataAvailable(ptr)) break;
          if (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) != 26) break;
          ptr += 1;
        }
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        break;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ChangeLogEntry::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:ChangeLogEntry)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes parent = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadBytes(
                input, this->mutable_parent()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes additions = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadBytes(
                input, this->add_additions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ChangeLogEntry.Successor successors = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_successors()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ChangeLogEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ChangeLogEntry)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ChangeLogEntry::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ChangeLogEntry)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes parent = 1;
  if (this->parent().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->parent(), output);
  }

  // repeated bytes additions = 2;
  for (int i = 0, n = this->additions_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBytes(
      2, this->additions(i), output);
  }

  // repeated .ChangeLogEntry.Successor successors = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->successors_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->successors(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ChangeLogEntry)
}

::PROTOBUF_NAMESPACE_ID::uint8* ChangeLogEntry::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ChangeLogEntry)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes parent = 1;
  if (this->parent().size() > 0) {
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBytesToArray(
        1, this->parent(), target);
  }

  // repeated bytes additions = 2;
  for (int i = 0, n = this->additions_size(); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      WriteBytesToArray(2, this->additions(i), target);
  }

  // repeated .ChangeLogEntry.Successor successors = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->successors_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->successors(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ChangeLogEntry)
  return target;
}

size_t ChangeLogEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ChangeLogEntry)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated bytes additions = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->additions_size());
  for (int i = 0, n = this->additions_size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
      this->additions(i));
  }

  // repeated .ChangeLogEntry.Successor successors = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->successors_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->successors(static_cast<int>(i)));
    }
  }

  // bytes parent = 1;
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->parent());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ChangeLogEntry::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ChangeLogEntry)
  GOOGLE_DCHECK_NE(&from, this);
  const ChangeLogEntry* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ChangeLogEntry>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ChangeLogEntry)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ChangeLogEntry)
    MergeFrom(*source);
  }
}

void ChangeLogEntry::MergeFrom(const ChangeLogEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ChangeLogEntry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  additions_.MergeFrom(from.additions_);
  successors_.MergeFrom(from.successors_);
  if (from.parent().size() > 0) {

    parent_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
}

void ChangeLogEntry::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ChangeLogEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChangeLogEntry::CopyFrom(const ChangeLogEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ChangeLogEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChangeLogEntry::IsInitialized() const {
  return true;
}

void ChangeLogEntry::Swap(ChangeLogEntry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChangeLogEntry::InternalSwap(ChangeLogEntry* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  additions_.InternalSwap(CastToBase(&other->additions_));
  CastToBase(&successors_)->InternalSwap(CastToBase(&other->successors_));
  parent_.Swap(&other->parent_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata ChangeLogEntry::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::ChangeLogEntry_Successor* Arena::CreateMaybeMessage< ::ChangeLogEntry_Successor >(Arena* arena) {
  return Arena::CreateInternal< ::ChangeLogEntry_Successor >(arena);
}
template<> PROTOBUF_NOINLINE ::ChangeLogEntry* Arena::CreateMaybeMessage< ::ChangeLogEntry >(Arena* arena) {
  return Arena::CreateInternal< ::ChangeLogEntry >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
