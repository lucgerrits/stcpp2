// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: client_state.proto

#include "client_state.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_client_5flist_5fcontrol_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ClientPagingControls_client_5flist_5fcontrol_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_client_5flist_5fcontrol_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ClientPagingResponse_client_5flist_5fcontrol_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_client_5flist_5fcontrol_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ClientSortControls_client_5flist_5fcontrol_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_client_5fstate_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ClientStateListResponse_Entry_client_5fstate_2eproto;
class ClientStateListRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ClientStateListRequest> _instance;
} _ClientStateListRequest_default_instance_;
class ClientStateListResponse_EntryDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ClientStateListResponse_Entry> _instance;
} _ClientStateListResponse_Entry_default_instance_;
class ClientStateListResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ClientStateListResponse> _instance;
} _ClientStateListResponse_default_instance_;
class ClientStateGetRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ClientStateGetRequest> _instance;
} _ClientStateGetRequest_default_instance_;
class ClientStateGetResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ClientStateGetResponse> _instance;
} _ClientStateGetResponse_default_instance_;
static void InitDefaultsscc_info_ClientStateGetRequest_client_5fstate_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ClientStateGetRequest_default_instance_;
    new (ptr) ::ClientStateGetRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ClientStateGetRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ClientStateGetRequest_client_5fstate_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_ClientStateGetRequest_client_5fstate_2eproto}, {}};

static void InitDefaultsscc_info_ClientStateGetResponse_client_5fstate_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ClientStateGetResponse_default_instance_;
    new (ptr) ::ClientStateGetResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ClientStateGetResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ClientStateGetResponse_client_5fstate_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_ClientStateGetResponse_client_5fstate_2eproto}, {}};

static void InitDefaultsscc_info_ClientStateListRequest_client_5fstate_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ClientStateListRequest_default_instance_;
    new (ptr) ::ClientStateListRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ClientStateListRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ClientStateListRequest_client_5fstate_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsscc_info_ClientStateListRequest_client_5fstate_2eproto}, {
      &scc_info_ClientPagingControls_client_5flist_5fcontrol_2eproto.base,
      &scc_info_ClientSortControls_client_5flist_5fcontrol_2eproto.base,}};

static void InitDefaultsscc_info_ClientStateListResponse_client_5fstate_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ClientStateListResponse_default_instance_;
    new (ptr) ::ClientStateListResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ClientStateListResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ClientStateListResponse_client_5fstate_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsscc_info_ClientStateListResponse_client_5fstate_2eproto}, {
      &scc_info_ClientStateListResponse_Entry_client_5fstate_2eproto.base,
      &scc_info_ClientPagingResponse_client_5flist_5fcontrol_2eproto.base,}};

static void InitDefaultsscc_info_ClientStateListResponse_Entry_client_5fstate_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ClientStateListResponse_Entry_default_instance_;
    new (ptr) ::ClientStateListResponse_Entry();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ClientStateListResponse_Entry::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ClientStateListResponse_Entry_client_5fstate_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_ClientStateListResponse_Entry_client_5fstate_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_client_5fstate_2eproto[5];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_client_5fstate_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_client_5fstate_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_client_5fstate_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ClientStateListRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientStateListRequest, state_root_),
  PROTOBUF_FIELD_OFFSET(::ClientStateListRequest, address_),
  PROTOBUF_FIELD_OFFSET(::ClientStateListRequest, paging_),
  PROTOBUF_FIELD_OFFSET(::ClientStateListRequest, sorting_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ClientStateListResponse_Entry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientStateListResponse_Entry, address_),
  PROTOBUF_FIELD_OFFSET(::ClientStateListResponse_Entry, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ClientStateListResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientStateListResponse, status_),
  PROTOBUF_FIELD_OFFSET(::ClientStateListResponse, entries_),
  PROTOBUF_FIELD_OFFSET(::ClientStateListResponse, state_root_),
  PROTOBUF_FIELD_OFFSET(::ClientStateListResponse, paging_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ClientStateGetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientStateGetRequest, state_root_),
  PROTOBUF_FIELD_OFFSET(::ClientStateGetRequest, address_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ClientStateGetResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientStateGetResponse, status_),
  PROTOBUF_FIELD_OFFSET(::ClientStateGetResponse, value_),
  PROTOBUF_FIELD_OFFSET(::ClientStateGetResponse, state_root_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::ClientStateListRequest)},
  { 9, -1, sizeof(::ClientStateListResponse_Entry)},
  { 16, -1, sizeof(::ClientStateListResponse)},
  { 25, -1, sizeof(::ClientStateGetRequest)},
  { 32, -1, sizeof(::ClientStateGetResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ClientStateListRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ClientStateListResponse_Entry_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ClientStateListResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ClientStateGetRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ClientStateGetResponse_default_instance_),
};

const char descriptor_table_protodef_client_5fstate_2eproto[] =
  "\n\022client_state.proto\032\031client_list_contro"
  "l.proto\"\212\001\n\026ClientStateListRequest\022\022\n\nst"
  "ate_root\030\001 \001(\t\022\017\n\007address\030\003 \001(\t\022%\n\006pagin"
  "g\030\004 \001(\0132\025.ClientPagingControls\022$\n\007sortin"
  "g\030\005 \003(\0132\023.ClientSortControls\"\221\003\n\027ClientS"
  "tateListResponse\022/\n\006status\030\001 \001(\0162\037.Clien"
  "tStateListResponse.Status\022/\n\007entries\030\002 \003"
  "(\0132\036.ClientStateListResponse.Entry\022\022\n\nst"
  "ate_root\030\003 \001(\t\022%\n\006paging\030\004 \001(\0132\025.ClientP"
  "agingResponse\032&\n\005Entry\022\017\n\007address\030\001 \001(\t\022"
  "\014\n\004data\030\002 \001(\014\"\260\001\n\006Status\022\020\n\014STATUS_UNSET"
  "\020\000\022\006\n\002OK\020\001\022\022\n\016INTERNAL_ERROR\020\002\022\r\n\tNOT_RE"
  "ADY\020\003\022\013\n\007NO_ROOT\020\004\022\017\n\013NO_RESOURCE\020\005\022\022\n\016I"
  "NVALID_PAGING\020\006\022\020\n\014INVALID_SORT\020\007\022\023\n\017INV"
  "ALID_ADDRESS\020\010\022\020\n\014INVALID_ROOT\020\t\"<\n\025Clie"
  "ntStateGetRequest\022\022\n\nstate_root\030\001 \001(\t\022\017\n"
  "\007address\030\003 \001(\t\"\370\001\n\026ClientStateGetRespons"
  "e\022.\n\006status\030\001 \001(\0162\036.ClientStateGetRespon"
  "se.Status\022\r\n\005value\030\002 \001(\014\022\022\n\nstate_root\030\003"
  " \001(\t\"\212\001\n\006Status\022\020\n\014STATUS_UNSET\020\000\022\006\n\002OK\020"
  "\001\022\022\n\016INTERNAL_ERROR\020\002\022\r\n\tNOT_READY\020\003\022\013\n\007"
  "NO_ROOT\020\004\022\017\n\013NO_RESOURCE\020\005\022\023\n\017INVALID_AD"
  "DRESS\020\006\022\020\n\014INVALID_ROOT\020\007B+\n\025sawtooth.sd"
  "k.protobufP\001Z\020client_state_pb2b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_client_5fstate_2eproto_deps[1] = {
  &::descriptor_table_client_5flist_5fcontrol_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_client_5fstate_2eproto_sccs[5] = {
  &scc_info_ClientStateGetRequest_client_5fstate_2eproto.base,
  &scc_info_ClientStateGetResponse_client_5fstate_2eproto.base,
  &scc_info_ClientStateListRequest_client_5fstate_2eproto.base,
  &scc_info_ClientStateListResponse_client_5fstate_2eproto.base,
  &scc_info_ClientStateListResponse_Entry_client_5fstate_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_client_5fstate_2eproto_once;
static bool descriptor_table_client_5fstate_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_client_5fstate_2eproto = {
  &descriptor_table_client_5fstate_2eproto_initialized, descriptor_table_protodef_client_5fstate_2eproto, "client_state.proto", 958,
  &descriptor_table_client_5fstate_2eproto_once, descriptor_table_client_5fstate_2eproto_sccs, descriptor_table_client_5fstate_2eproto_deps, 5, 1,
  schemas, file_default_instances, TableStruct_client_5fstate_2eproto::offsets,
  file_level_metadata_client_5fstate_2eproto, 5, file_level_enum_descriptors_client_5fstate_2eproto, file_level_service_descriptors_client_5fstate_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_client_5fstate_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_client_5fstate_2eproto), true);
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ClientStateListResponse_Status_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_client_5fstate_2eproto);
  return file_level_enum_descriptors_client_5fstate_2eproto[0];
}
bool ClientStateListResponse_Status_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr ClientStateListResponse_Status ClientStateListResponse::STATUS_UNSET;
constexpr ClientStateListResponse_Status ClientStateListResponse::OK;
constexpr ClientStateListResponse_Status ClientStateListResponse::INTERNAL_ERROR;
constexpr ClientStateListResponse_Status ClientStateListResponse::NOT_READY;
constexpr ClientStateListResponse_Status ClientStateListResponse::NO_ROOT;
constexpr ClientStateListResponse_Status ClientStateListResponse::NO_RESOURCE;
constexpr ClientStateListResponse_Status ClientStateListResponse::INVALID_PAGING;
constexpr ClientStateListResponse_Status ClientStateListResponse::INVALID_SORT;
constexpr ClientStateListResponse_Status ClientStateListResponse::INVALID_ADDRESS;
constexpr ClientStateListResponse_Status ClientStateListResponse::INVALID_ROOT;
constexpr ClientStateListResponse_Status ClientStateListResponse::Status_MIN;
constexpr ClientStateListResponse_Status ClientStateListResponse::Status_MAX;
constexpr int ClientStateListResponse::Status_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ClientStateGetResponse_Status_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_client_5fstate_2eproto);
  return file_level_enum_descriptors_client_5fstate_2eproto[1];
}
bool ClientStateGetResponse_Status_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr ClientStateGetResponse_Status ClientStateGetResponse::STATUS_UNSET;
constexpr ClientStateGetResponse_Status ClientStateGetResponse::OK;
constexpr ClientStateGetResponse_Status ClientStateGetResponse::INTERNAL_ERROR;
constexpr ClientStateGetResponse_Status ClientStateGetResponse::NOT_READY;
constexpr ClientStateGetResponse_Status ClientStateGetResponse::NO_ROOT;
constexpr ClientStateGetResponse_Status ClientStateGetResponse::NO_RESOURCE;
constexpr ClientStateGetResponse_Status ClientStateGetResponse::INVALID_ADDRESS;
constexpr ClientStateGetResponse_Status ClientStateGetResponse::INVALID_ROOT;
constexpr ClientStateGetResponse_Status ClientStateGetResponse::Status_MIN;
constexpr ClientStateGetResponse_Status ClientStateGetResponse::Status_MAX;
constexpr int ClientStateGetResponse::Status_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)

// ===================================================================

void ClientStateListRequest::InitAsDefaultInstance() {
  ::_ClientStateListRequest_default_instance_._instance.get_mutable()->paging_ = const_cast< ::ClientPagingControls*>(
      ::ClientPagingControls::internal_default_instance());
}
class ClientStateListRequest::HasBitSetters {
 public:
  static const ::ClientPagingControls& paging(const ClientStateListRequest* msg);
};

const ::ClientPagingControls&
ClientStateListRequest::HasBitSetters::paging(const ClientStateListRequest* msg) {
  return *msg->paging_;
}
void ClientStateListRequest::clear_paging() {
  if (GetArenaNoVirtual() == nullptr && paging_ != nullptr) {
    delete paging_;
  }
  paging_ = nullptr;
}
void ClientStateListRequest::clear_sorting() {
  sorting_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientStateListRequest::kStateRootFieldNumber;
const int ClientStateListRequest::kAddressFieldNumber;
const int ClientStateListRequest::kPagingFieldNumber;
const int ClientStateListRequest::kSortingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientStateListRequest::ClientStateListRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ClientStateListRequest)
}
ClientStateListRequest::ClientStateListRequest(const ClientStateListRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      sorting_(from.sorting_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  state_root_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.state_root().size() > 0) {
    state_root_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.state_root_);
  }
  address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.address().size() > 0) {
    address_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  if (from.has_paging()) {
    paging_ = new ::ClientPagingControls(*from.paging_);
  } else {
    paging_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:ClientStateListRequest)
}

void ClientStateListRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ClientStateListRequest_client_5fstate_2eproto.base);
  state_root_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  paging_ = nullptr;
}

ClientStateListRequest::~ClientStateListRequest() {
  // @@protoc_insertion_point(destructor:ClientStateListRequest)
  SharedDtor();
}

void ClientStateListRequest::SharedDtor() {
  state_root_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete paging_;
}

void ClientStateListRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ClientStateListRequest& ClientStateListRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ClientStateListRequest_client_5fstate_2eproto.base);
  return *internal_default_instance();
}


void ClientStateListRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientStateListRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sorting_.Clear();
  state_root_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  address_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && paging_ != nullptr) {
    delete paging_;
  }
  paging_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ClientStateListRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string state_root = 1;
      case 1: {
        if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_state_root(), ptr, ctx, "ClientStateListRequest.state_root");
        CHK_(ptr);
        break;
      }
      // string address = 3;
      case 3: {
        if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_address(), ptr, ctx, "ClientStateListRequest.address");
        CHK_(ptr);
        break;
      }
      // .ClientPagingControls paging = 4;
      case 4: {
        if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) != 34) goto handle_unusual;
        ptr = ctx->ParseMessage(mutable_paging(), ptr);
        CHK_(ptr);
        break;
      }
      // repeated .ClientSortControls sorting = 5;
      case 5: {
        if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) != 42) goto handle_unusual;
        while (true) {
          ptr = ctx->ParseMessage(add_sorting(), ptr);
          CHK_(ptr);
          if (!ctx->DataAvailable(ptr)) break;
          if (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) != 42) break;
          ptr += 1;
        }
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        break;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ClientStateListRequest::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:ClientStateListRequest)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string state_root = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_state_root()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->state_root().data(), static_cast<int>(this->state_root().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "ClientStateListRequest.state_root"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string address = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_address()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->address().data(), static_cast<int>(this->address().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "ClientStateListRequest.address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ClientPagingControls paging = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (34 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_paging()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ClientSortControls sorting = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (42 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_sorting()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ClientStateListRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ClientStateListRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ClientStateListRequest::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ClientStateListRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string state_root = 1;
  if (this->state_root().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->state_root().data(), static_cast<int>(this->state_root().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ClientStateListRequest.state_root");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->state_root(), output);
  }

  // string address = 3;
  if (this->address().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), static_cast<int>(this->address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ClientStateListRequest.address");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->address(), output);
  }

  // .ClientPagingControls paging = 4;
  if (this->has_paging()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::paging(this), output);
  }

  // repeated .ClientSortControls sorting = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sorting_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->sorting(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ClientStateListRequest)
}

::PROTOBUF_NAMESPACE_ID::uint8* ClientStateListRequest::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientStateListRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string state_root = 1;
  if (this->state_root().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->state_root().data(), static_cast<int>(this->state_root().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ClientStateListRequest.state_root");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        1, this->state_root(), target);
  }

  // string address = 3;
  if (this->address().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), static_cast<int>(this->address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ClientStateListRequest.address");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        3, this->address(), target);
  }

  // .ClientPagingControls paging = 4;
  if (this->has_paging()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::paging(this), target);
  }

  // repeated .ClientSortControls sorting = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sorting_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->sorting(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientStateListRequest)
  return target;
}

size_t ClientStateListRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientStateListRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ClientSortControls sorting = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->sorting_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->sorting(static_cast<int>(i)));
    }
  }

  // string state_root = 1;
  if (this->state_root().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->state_root());
  }

  // string address = 3;
  if (this->address().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->address());
  }

  // .ClientPagingControls paging = 4;
  if (this->has_paging()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *paging_);
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClientStateListRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientStateListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientStateListRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ClientStateListRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientStateListRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientStateListRequest)
    MergeFrom(*source);
  }
}

void ClientStateListRequest::MergeFrom(const ClientStateListRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientStateListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  sorting_.MergeFrom(from.sorting_);
  if (from.state_root().size() > 0) {

    state_root_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.state_root_);
  }
  if (from.address().size() > 0) {

    address_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  if (from.has_paging()) {
    mutable_paging()->::ClientPagingControls::MergeFrom(from.paging());
  }
}

void ClientStateListRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientStateListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientStateListRequest::CopyFrom(const ClientStateListRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientStateListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientStateListRequest::IsInitialized() const {
  return true;
}

void ClientStateListRequest::Swap(ClientStateListRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientStateListRequest::InternalSwap(ClientStateListRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&sorting_)->InternalSwap(CastToBase(&other->sorting_));
  state_root_.Swap(&other->state_root_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  address_.Swap(&other->address_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(paging_, other->paging_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ClientStateListRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ClientStateListResponse_Entry::InitAsDefaultInstance() {
}
class ClientStateListResponse_Entry::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientStateListResponse_Entry::kAddressFieldNumber;
const int ClientStateListResponse_Entry::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientStateListResponse_Entry::ClientStateListResponse_Entry()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ClientStateListResponse.Entry)
}
ClientStateListResponse_Entry::ClientStateListResponse_Entry(const ClientStateListResponse_Entry& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.address().size() > 0) {
    address_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  // @@protoc_insertion_point(copy_constructor:ClientStateListResponse.Entry)
}

void ClientStateListResponse_Entry::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ClientStateListResponse_Entry_client_5fstate_2eproto.base);
  address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ClientStateListResponse_Entry::~ClientStateListResponse_Entry() {
  // @@protoc_insertion_point(destructor:ClientStateListResponse.Entry)
  SharedDtor();
}

void ClientStateListResponse_Entry::SharedDtor() {
  address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ClientStateListResponse_Entry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ClientStateListResponse_Entry& ClientStateListResponse_Entry::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ClientStateListResponse_Entry_client_5fstate_2eproto.base);
  return *internal_default_instance();
}


void ClientStateListResponse_Entry::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientStateListResponse.Entry)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  address_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  data_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ClientStateListResponse_Entry::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string address = 1;
      case 1: {
        if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_address(), ptr, ctx, "ClientStateListResponse.Entry.address");
        CHK_(ptr);
        break;
      }
      // bytes data = 2;
      case 2: {
        if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(mutable_data(), ptr, ctx);
        CHK_(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        break;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ClientStateListResponse_Entry::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:ClientStateListResponse.Entry)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string address = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_address()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->address().data(), static_cast<int>(this->address().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "ClientStateListResponse.Entry.address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes data = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ClientStateListResponse.Entry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ClientStateListResponse.Entry)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ClientStateListResponse_Entry::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ClientStateListResponse.Entry)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string address = 1;
  if (this->address().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), static_cast<int>(this->address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ClientStateListResponse.Entry.address");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->address(), output);
  }

  // bytes data = 2;
  if (this->data().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ClientStateListResponse.Entry)
}

::PROTOBUF_NAMESPACE_ID::uint8* ClientStateListResponse_Entry::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientStateListResponse.Entry)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string address = 1;
  if (this->address().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), static_cast<int>(this->address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ClientStateListResponse.Entry.address");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        1, this->address(), target);
  }

  // bytes data = 2;
  if (this->data().size() > 0) {
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBytesToArray(
        2, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientStateListResponse.Entry)
  return target;
}

size_t ClientStateListResponse_Entry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientStateListResponse.Entry)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string address = 1;
  if (this->address().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->address());
  }

  // bytes data = 2;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->data());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClientStateListResponse_Entry::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientStateListResponse.Entry)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientStateListResponse_Entry* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ClientStateListResponse_Entry>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientStateListResponse.Entry)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientStateListResponse.Entry)
    MergeFrom(*source);
  }
}

void ClientStateListResponse_Entry::MergeFrom(const ClientStateListResponse_Entry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientStateListResponse.Entry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.address().size() > 0) {

    address_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
}

void ClientStateListResponse_Entry::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientStateListResponse.Entry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientStateListResponse_Entry::CopyFrom(const ClientStateListResponse_Entry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientStateListResponse.Entry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientStateListResponse_Entry::IsInitialized() const {
  return true;
}

void ClientStateListResponse_Entry::Swap(ClientStateListResponse_Entry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientStateListResponse_Entry::InternalSwap(ClientStateListResponse_Entry* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  address_.Swap(&other->address_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  data_.Swap(&other->data_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata ClientStateListResponse_Entry::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ClientStateListResponse::InitAsDefaultInstance() {
  ::_ClientStateListResponse_default_instance_._instance.get_mutable()->paging_ = const_cast< ::ClientPagingResponse*>(
      ::ClientPagingResponse::internal_default_instance());
}
class ClientStateListResponse::HasBitSetters {
 public:
  static const ::ClientPagingResponse& paging(const ClientStateListResponse* msg);
};

const ::ClientPagingResponse&
ClientStateListResponse::HasBitSetters::paging(const ClientStateListResponse* msg) {
  return *msg->paging_;
}
void ClientStateListResponse::clear_paging() {
  if (GetArenaNoVirtual() == nullptr && paging_ != nullptr) {
    delete paging_;
  }
  paging_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientStateListResponse::kStatusFieldNumber;
const int ClientStateListResponse::kEntriesFieldNumber;
const int ClientStateListResponse::kStateRootFieldNumber;
const int ClientStateListResponse::kPagingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientStateListResponse::ClientStateListResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ClientStateListResponse)
}
ClientStateListResponse::ClientStateListResponse(const ClientStateListResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      entries_(from.entries_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  state_root_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.state_root().size() > 0) {
    state_root_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.state_root_);
  }
  if (from.has_paging()) {
    paging_ = new ::ClientPagingResponse(*from.paging_);
  } else {
    paging_ = nullptr;
  }
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:ClientStateListResponse)
}

void ClientStateListResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ClientStateListResponse_client_5fstate_2eproto.base);
  state_root_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&paging_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&paging_)) + sizeof(status_));
}

ClientStateListResponse::~ClientStateListResponse() {
  // @@protoc_insertion_point(destructor:ClientStateListResponse)
  SharedDtor();
}

void ClientStateListResponse::SharedDtor() {
  state_root_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete paging_;
}

void ClientStateListResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ClientStateListResponse& ClientStateListResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ClientStateListResponse_client_5fstate_2eproto.base);
  return *internal_default_instance();
}


void ClientStateListResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientStateListResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entries_.Clear();
  state_root_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && paging_ != nullptr) {
    delete paging_;
  }
  paging_ = nullptr;
  status_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ClientStateListResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .ClientStateListResponse.Status status = 1;
      case 1: {
        if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) != 8) goto handle_unusual;
        ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
        CHK_(ptr);
        set_status(static_cast<::ClientStateListResponse_Status>(val));
        break;
      }
      // repeated .ClientStateListResponse.Entry entries = 2;
      case 2: {
        if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) != 18) goto handle_unusual;
        while (true) {
          ptr = ctx->ParseMessage(add_entries(), ptr);
          CHK_(ptr);
          if (!ctx->DataAvailable(ptr)) break;
          if (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) != 18) break;
          ptr += 1;
        }
        break;
      }
      // string state_root = 3;
      case 3: {
        if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_state_root(), ptr, ctx, "ClientStateListResponse.state_root");
        CHK_(ptr);
        break;
      }
      // .ClientPagingResponse paging = 4;
      case 4: {
        if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) != 34) goto handle_unusual;
        ptr = ctx->ParseMessage(mutable_paging(), ptr);
        CHK_(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        break;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ClientStateListResponse::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:ClientStateListResponse)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ClientStateListResponse.Status status = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_status(static_cast< ::ClientStateListResponse_Status >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ClientStateListResponse.Entry entries = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_entries()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string state_root = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_state_root()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->state_root().data(), static_cast<int>(this->state_root().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "ClientStateListResponse.state_root"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ClientPagingResponse paging = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (34 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_paging()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ClientStateListResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ClientStateListResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ClientStateListResponse::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ClientStateListResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ClientStateListResponse.Status status = 1;
  if (this->status() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      1, this->status(), output);
  }

  // repeated .ClientStateListResponse.Entry entries = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entries_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->entries(static_cast<int>(i)),
      output);
  }

  // string state_root = 3;
  if (this->state_root().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->state_root().data(), static_cast<int>(this->state_root().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ClientStateListResponse.state_root");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->state_root(), output);
  }

  // .ClientPagingResponse paging = 4;
  if (this->has_paging()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::paging(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ClientStateListResponse)
}

::PROTOBUF_NAMESPACE_ID::uint8* ClientStateListResponse::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientStateListResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ClientStateListResponse.Status status = 1;
  if (this->status() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->status(), target);
  }

  // repeated .ClientStateListResponse.Entry entries = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entries_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->entries(static_cast<int>(i)), target);
  }

  // string state_root = 3;
  if (this->state_root().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->state_root().data(), static_cast<int>(this->state_root().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ClientStateListResponse.state_root");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        3, this->state_root(), target);
  }

  // .ClientPagingResponse paging = 4;
  if (this->has_paging()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::paging(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientStateListResponse)
  return target;
}

size_t ClientStateListResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientStateListResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ClientStateListResponse.Entry entries = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->entries_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->entries(static_cast<int>(i)));
    }
  }

  // string state_root = 3;
  if (this->state_root().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->state_root());
  }

  // .ClientPagingResponse paging = 4;
  if (this->has_paging()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *paging_);
  }

  // .ClientStateListResponse.Status status = 1;
  if (this->status() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->status());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClientStateListResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientStateListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientStateListResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ClientStateListResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientStateListResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientStateListResponse)
    MergeFrom(*source);
  }
}

void ClientStateListResponse::MergeFrom(const ClientStateListResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientStateListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  entries_.MergeFrom(from.entries_);
  if (from.state_root().size() > 0) {

    state_root_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.state_root_);
  }
  if (from.has_paging()) {
    mutable_paging()->::ClientPagingResponse::MergeFrom(from.paging());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void ClientStateListResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientStateListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientStateListResponse::CopyFrom(const ClientStateListResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientStateListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientStateListResponse::IsInitialized() const {
  return true;
}

void ClientStateListResponse::Swap(ClientStateListResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientStateListResponse::InternalSwap(ClientStateListResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&entries_)->InternalSwap(CastToBase(&other->entries_));
  state_root_.Swap(&other->state_root_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(paging_, other->paging_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ClientStateListResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ClientStateGetRequest::InitAsDefaultInstance() {
}
class ClientStateGetRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientStateGetRequest::kStateRootFieldNumber;
const int ClientStateGetRequest::kAddressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientStateGetRequest::ClientStateGetRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ClientStateGetRequest)
}
ClientStateGetRequest::ClientStateGetRequest(const ClientStateGetRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  state_root_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.state_root().size() > 0) {
    state_root_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.state_root_);
  }
  address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.address().size() > 0) {
    address_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  // @@protoc_insertion_point(copy_constructor:ClientStateGetRequest)
}

void ClientStateGetRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ClientStateGetRequest_client_5fstate_2eproto.base);
  state_root_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ClientStateGetRequest::~ClientStateGetRequest() {
  // @@protoc_insertion_point(destructor:ClientStateGetRequest)
  SharedDtor();
}

void ClientStateGetRequest::SharedDtor() {
  state_root_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ClientStateGetRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ClientStateGetRequest& ClientStateGetRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ClientStateGetRequest_client_5fstate_2eproto.base);
  return *internal_default_instance();
}


void ClientStateGetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientStateGetRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  state_root_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  address_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ClientStateGetRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string state_root = 1;
      case 1: {
        if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_state_root(), ptr, ctx, "ClientStateGetRequest.state_root");
        CHK_(ptr);
        break;
      }
      // string address = 3;
      case 3: {
        if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_address(), ptr, ctx, "ClientStateGetRequest.address");
        CHK_(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        break;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ClientStateGetRequest::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:ClientStateGetRequest)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string state_root = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_state_root()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->state_root().data(), static_cast<int>(this->state_root().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "ClientStateGetRequest.state_root"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string address = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_address()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->address().data(), static_cast<int>(this->address().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "ClientStateGetRequest.address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ClientStateGetRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ClientStateGetRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ClientStateGetRequest::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ClientStateGetRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string state_root = 1;
  if (this->state_root().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->state_root().data(), static_cast<int>(this->state_root().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ClientStateGetRequest.state_root");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->state_root(), output);
  }

  // string address = 3;
  if (this->address().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), static_cast<int>(this->address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ClientStateGetRequest.address");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->address(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ClientStateGetRequest)
}

::PROTOBUF_NAMESPACE_ID::uint8* ClientStateGetRequest::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientStateGetRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string state_root = 1;
  if (this->state_root().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->state_root().data(), static_cast<int>(this->state_root().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ClientStateGetRequest.state_root");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        1, this->state_root(), target);
  }

  // string address = 3;
  if (this->address().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), static_cast<int>(this->address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ClientStateGetRequest.address");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        3, this->address(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientStateGetRequest)
  return target;
}

size_t ClientStateGetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientStateGetRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string state_root = 1;
  if (this->state_root().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->state_root());
  }

  // string address = 3;
  if (this->address().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->address());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClientStateGetRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientStateGetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientStateGetRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ClientStateGetRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientStateGetRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientStateGetRequest)
    MergeFrom(*source);
  }
}

void ClientStateGetRequest::MergeFrom(const ClientStateGetRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientStateGetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.state_root().size() > 0) {

    state_root_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.state_root_);
  }
  if (from.address().size() > 0) {

    address_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
}

void ClientStateGetRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientStateGetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientStateGetRequest::CopyFrom(const ClientStateGetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientStateGetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientStateGetRequest::IsInitialized() const {
  return true;
}

void ClientStateGetRequest::Swap(ClientStateGetRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientStateGetRequest::InternalSwap(ClientStateGetRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  state_root_.Swap(&other->state_root_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  address_.Swap(&other->address_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata ClientStateGetRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ClientStateGetResponse::InitAsDefaultInstance() {
}
class ClientStateGetResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientStateGetResponse::kStatusFieldNumber;
const int ClientStateGetResponse::kValueFieldNumber;
const int ClientStateGetResponse::kStateRootFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientStateGetResponse::ClientStateGetResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ClientStateGetResponse)
}
ClientStateGetResponse::ClientStateGetResponse(const ClientStateGetResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  state_root_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.state_root().size() > 0) {
    state_root_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.state_root_);
  }
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:ClientStateGetResponse)
}

void ClientStateGetResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ClientStateGetResponse_client_5fstate_2eproto.base);
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  state_root_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  status_ = 0;
}

ClientStateGetResponse::~ClientStateGetResponse() {
  // @@protoc_insertion_point(destructor:ClientStateGetResponse)
  SharedDtor();
}

void ClientStateGetResponse::SharedDtor() {
  value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  state_root_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ClientStateGetResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ClientStateGetResponse& ClientStateGetResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ClientStateGetResponse_client_5fstate_2eproto.base);
  return *internal_default_instance();
}


void ClientStateGetResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientStateGetResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  state_root_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  status_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ClientStateGetResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .ClientStateGetResponse.Status status = 1;
      case 1: {
        if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) != 8) goto handle_unusual;
        ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
        CHK_(ptr);
        set_status(static_cast<::ClientStateGetResponse_Status>(val));
        break;
      }
      // bytes value = 2;
      case 2: {
        if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(mutable_value(), ptr, ctx);
        CHK_(ptr);
        break;
      }
      // string state_root = 3;
      case 3: {
        if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_state_root(), ptr, ctx, "ClientStateGetResponse.state_root");
        CHK_(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        break;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ClientStateGetResponse::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:ClientStateGetResponse)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ClientStateGetResponse.Status status = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_status(static_cast< ::ClientStateGetResponse_Status >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes value = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string state_root = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_state_root()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->state_root().data(), static_cast<int>(this->state_root().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "ClientStateGetResponse.state_root"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ClientStateGetResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ClientStateGetResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ClientStateGetResponse::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ClientStateGetResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ClientStateGetResponse.Status status = 1;
  if (this->status() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      1, this->status(), output);
  }

  // bytes value = 2;
  if (this->value().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->value(), output);
  }

  // string state_root = 3;
  if (this->state_root().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->state_root().data(), static_cast<int>(this->state_root().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ClientStateGetResponse.state_root");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->state_root(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ClientStateGetResponse)
}

::PROTOBUF_NAMESPACE_ID::uint8* ClientStateGetResponse::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientStateGetResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ClientStateGetResponse.Status status = 1;
  if (this->status() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->status(), target);
  }

  // bytes value = 2;
  if (this->value().size() > 0) {
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBytesToArray(
        2, this->value(), target);
  }

  // string state_root = 3;
  if (this->state_root().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->state_root().data(), static_cast<int>(this->state_root().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ClientStateGetResponse.state_root");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        3, this->state_root(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientStateGetResponse)
  return target;
}

size_t ClientStateGetResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientStateGetResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->value());
  }

  // string state_root = 3;
  if (this->state_root().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->state_root());
  }

  // .ClientStateGetResponse.Status status = 1;
  if (this->status() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->status());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClientStateGetResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientStateGetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientStateGetResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ClientStateGetResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientStateGetResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientStateGetResponse)
    MergeFrom(*source);
  }
}

void ClientStateGetResponse::MergeFrom(const ClientStateGetResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientStateGetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.state_root().size() > 0) {

    state_root_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.state_root_);
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void ClientStateGetResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientStateGetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientStateGetResponse::CopyFrom(const ClientStateGetResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientStateGetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientStateGetResponse::IsInitialized() const {
  return true;
}

void ClientStateGetResponse::Swap(ClientStateGetResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientStateGetResponse::InternalSwap(ClientStateGetResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  value_.Swap(&other->value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  state_root_.Swap(&other->state_root_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ClientStateGetResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::ClientStateListRequest* Arena::CreateMaybeMessage< ::ClientStateListRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ClientStateListRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientStateListResponse_Entry* Arena::CreateMaybeMessage< ::ClientStateListResponse_Entry >(Arena* arena) {
  return Arena::CreateInternal< ::ClientStateListResponse_Entry >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientStateListResponse* Arena::CreateMaybeMessage< ::ClientStateListResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ClientStateListResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientStateGetRequest* Arena::CreateMaybeMessage< ::ClientStateGetRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ClientStateGetRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientStateGetResponse* Arena::CreateMaybeMessage< ::ClientStateGetResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ClientStateGetResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
